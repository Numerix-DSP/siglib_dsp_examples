/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package siglib_wrap;

public class siglib_wrapJNI {
  public final static native long new_doubleArray(int jarg1);
  public final static native void delete_doubleArray(long jarg1);
  public final static native double doubleArray_getitem(long jarg1, int jarg2);
  public final static native void doubleArray_setitem(long jarg1, int jarg2, double jarg3);
  public final static native long new_longArray(int jarg1);
  public final static native void delete_longArray(long jarg1);
  public final static native int longArray_getitem(long jarg1, int jarg2);
  public final static native void longArray_setitem(long jarg1, int jarg2, int jarg3);
  public final static native long new_SLData_tArray(int jarg1);
  public final static native void delete_SLData_tArray(long jarg1);
  public final static native double SLData_tArray_getitem(long jarg1, int jarg2);
  public final static native void SLData_tArray_setitem(long jarg1, int jarg2, double jarg3);
  public final static native long new_SLFixData_tArray(int jarg1);
  public final static native void delete_SLFixData_tArray(long jarg1);
  public final static native int SLFixData_tArray_getitem(long jarg1, int jarg2);
  public final static native void SLFixData_tArray_setitem(long jarg1, int jarg2, int jarg3);
  public final static native long new_SLArrayIndex_tArray(int jarg1);
  public final static native void delete_SLArrayIndex_tArray(long jarg1);
  public final static native int SLArrayIndex_tArray_getitem(long jarg1, int jarg2);
  public final static native void SLArrayIndex_tArray_setitem(long jarg1, int jarg2, int jarg3);
  public final static native int SIGLIB_SWIG_SWITCH_get();
  public final static native int SIGLIB_get();
  public final static native double SIGLIB_VERSION_get();
  public final static native int SIGLIB_ENABLE_DEBUG_FPRINTF_get();
  public final static native int SIGLIB_FIX_DATA_SHORT_get();
  public final static native int SIGLIB_DATA_SHORT_get();
  public final static native int SIGLIB_DATA_LONG_get();
  public final static native int SIGLIB_DATA_FLOAT_get();
  public final static native int SIGLIB_INDEX_SHORT_get();
  public final static native int SIGLIB_HUGE_ARRAYS_get();
  public final static native int SIGLIB_ARRAYS_ALIGNED_get();
  public final static native int SIGLIB_FILE_IO_SUPPORTED_get();
  public final static native int SIGLIB_CONSOLE_IO_SUPPORTED_get();
  public final static native int RAND_MAX_get();
  public final static native double SIGLIB_MINUS_ONE_HUNDRED_get();
  public final static native double SIGLIB_MINUS_TEN_get();
  public final static native double SIGLIB_MINUS_TWO_get();
  public final static native double SIGLIB_MINUS_ONE_get();
  public final static native double SIGLIB_MINUS_HALF_get();
  public final static native double SIGLIB_ZERO_get();
  public final static native double SIGLIB_QUARTER_get();
  public final static native double SIGLIB_THIRD_get();
  public final static native double SIGLIB_HALF_get();
  public final static native double SIGLIB_ONE_get();
  public final static native double SIGLIB_ONE_AND_HALF_get();
  public final static native double SIGLIB_TWO_get();
  public final static native double SIGLIB_THREE_get();
  public final static native double SIGLIB_FOUR_get();
  public final static native double SIGLIB_FIVE_get();
  public final static native double SIGLIB_SIX_get();
  public final static native double SIGLIB_SEVEN_get();
  public final static native double SIGLIB_EIGHT_get();
  public final static native double SIGLIB_NINE_get();
  public final static native double SIGLIB_TEN_get();
  public final static native double SIGLIB_SIXTEEN_get();
  public final static native double SIGLIB_TWENTY_get();
  public final static native double SIGLIB_FIFTY_get();
  public final static native double SIGLIB_SIXTY_FOUR_get();
  public final static native double SIGLIB_ONE_HUNDRED_get();
  public final static native double SIGLIB_TWO_HUNDRED_get();
  public final static native double SIGLIB_THREE_SIXTY_get();
  public final static native double SIGLIB_PI_get();
  public final static native double SIGLIB_TWO_PI_get();
  public final static native double SIGLIB_HALF_PI_get();
  public final static native double SIGLIB_QUARTER_PI_get();
  public final static native double SIGLIB_FOUR_PI_get();
  public final static native double SIGLIB_INV_PI_get();
  public final static native double SIGLIB_INV_TWO_PI_get();
  public final static native double SIGLIB_SQRT_PI_get();
  public final static native double SIGLIB_PI_SQUARED_get();
  public final static native double SIGLIB_INV_EIGHT_get();
  public final static native double SIGLIB_INV_SIXTEEN_get();
  public final static native double SIGLIB_SQRT_TWO_get();
  public final static native double SIGLIB_INV_SQRT_TWO_get();
  public final static native double SIGLIB_INV_SQRT_TWO_PI_get();
  public final static native double SIGLIB_SQRT_HALF_LN2_get();
  public final static native double SIGLIB_LN2_get();
  public final static native double SIGLIB_THREE_SIXTY_OVER_TWO_PI_get();
  public final static native double SIGLIB_TWO_PI_OVER_THREE_SIXTY_get();
  public final static native double SIGLIB_INV_LOG10_OF_2_get();
  public final static native double SIGLIB_DEGREES_TO_RADIANS_get();
  public final static native double SIGLIB_RADIANS_TO_DEGREES_get();
  public final static native void SLComplexRect_s_real_set(long jarg1, SLComplexRect_s jarg1_, double jarg2);
  public final static native double SLComplexRect_s_real_get(long jarg1, SLComplexRect_s jarg1_);
  public final static native void SLComplexRect_s_imag_set(long jarg1, SLComplexRect_s jarg1_, double jarg2);
  public final static native double SLComplexRect_s_imag_get(long jarg1, SLComplexRect_s jarg1_);
  public final static native long new_SLComplexRect_s();
  public final static native void delete_SLComplexRect_s(long jarg1);
  public final static native void SLComplexPolar_s_magn_set(long jarg1, SLComplexPolar_s jarg1_, double jarg2);
  public final static native double SLComplexPolar_s_magn_get(long jarg1, SLComplexPolar_s jarg1_);
  public final static native void SLComplexPolar_s_angle_set(long jarg1, SLComplexPolar_s jarg1_, double jarg2);
  public final static native double SLComplexPolar_s_angle_get(long jarg1, SLComplexPolar_s jarg1_);
  public final static native long new_SLComplexPolar_s();
  public final static native void delete_SLComplexPolar_s(long jarg1);
  public final static native void SLComplexRect16_s_real_set(long jarg1, SLComplexRect16_s jarg1_, short jarg2);
  public final static native short SLComplexRect16_s_real_get(long jarg1, SLComplexRect16_s jarg1_);
  public final static native void SLComplexRect16_s_imag_set(long jarg1, SLComplexRect16_s jarg1_, short jarg2);
  public final static native short SLComplexRect16_s_imag_get(long jarg1, SLComplexRect16_s jarg1_);
  public final static native long new_SLComplexRect16_s();
  public final static native void delete_SLComplexRect16_s(long jarg1);
  public final static native void SLComplexPolar16_s_magn_set(long jarg1, SLComplexPolar16_s jarg1_, short jarg2);
  public final static native short SLComplexPolar16_s_magn_get(long jarg1, SLComplexPolar16_s jarg1_);
  public final static native void SLComplexPolar16_s_angle_set(long jarg1, SLComplexPolar16_s jarg1_, short jarg2);
  public final static native short SLComplexPolar16_s_angle_get(long jarg1, SLComplexPolar16_s jarg1_);
  public final static native long new_SLComplexPolar16_s();
  public final static native void delete_SLComplexPolar16_s(long jarg1);
  public final static native void SLComplexRect32_s_real_set(long jarg1, SLComplexRect32_s jarg1_, int jarg2);
  public final static native int SLComplexRect32_s_real_get(long jarg1, SLComplexRect32_s jarg1_);
  public final static native void SLComplexRect32_s_imag_set(long jarg1, SLComplexRect32_s jarg1_, int jarg2);
  public final static native int SLComplexRect32_s_imag_get(long jarg1, SLComplexRect32_s jarg1_);
  public final static native long new_SLComplexRect32_s();
  public final static native void delete_SLComplexRect32_s(long jarg1);
  public final static native void SLComplexPolar32_s_magn_set(long jarg1, SLComplexPolar32_s jarg1_, int jarg2);
  public final static native int SLComplexPolar32_s_magn_get(long jarg1, SLComplexPolar32_s jarg1_);
  public final static native void SLComplexPolar32_s_angle_set(long jarg1, SLComplexPolar32_s jarg1_, int jarg2);
  public final static native int SLComplexPolar32_s_angle_get(long jarg1, SLComplexPolar32_s jarg1_);
  public final static native long new_SLComplexPolar32_s();
  public final static native void delete_SLComplexPolar32_s(long jarg1);
  public final static native void SLMicrophone_s_xPos_set(long jarg1, SLMicrophone_s jarg1_, double jarg2);
  public final static native double SLMicrophone_s_xPos_get(long jarg1, SLMicrophone_s jarg1_);
  public final static native void SLMicrophone_s_yPos_set(long jarg1, SLMicrophone_s jarg1_, double jarg2);
  public final static native double SLMicrophone_s_yPos_get(long jarg1, SLMicrophone_s jarg1_);
  public final static native void SLMicrophone_s_delay_set(long jarg1, SLMicrophone_s jarg1_, double jarg2);
  public final static native double SLMicrophone_s_delay_get(long jarg1, SLMicrophone_s jarg1_);
  public final static native void SLMicrophone_s_gain_set(long jarg1, SLMicrophone_s jarg1_, double jarg2);
  public final static native double SLMicrophone_s_gain_get(long jarg1, SLMicrophone_s jarg1_);
  public final static native long new_SLMicrophone_s();
  public final static native void delete_SLMicrophone_s(long jarg1);
  public final static native void SLMicrophone16_s_xPos_set(long jarg1, SLMicrophone16_s jarg1_, short jarg2);
  public final static native short SLMicrophone16_s_xPos_get(long jarg1, SLMicrophone16_s jarg1_);
  public final static native void SLMicrophone16_s_yPos_set(long jarg1, SLMicrophone16_s jarg1_, short jarg2);
  public final static native short SLMicrophone16_s_yPos_get(long jarg1, SLMicrophone16_s jarg1_);
  public final static native void SLMicrophone16_s_delay_set(long jarg1, SLMicrophone16_s jarg1_, short jarg2);
  public final static native short SLMicrophone16_s_delay_get(long jarg1, SLMicrophone16_s jarg1_);
  public final static native void SLMicrophone16_s_gain_set(long jarg1, SLMicrophone16_s jarg1_, short jarg2);
  public final static native short SLMicrophone16_s_gain_get(long jarg1, SLMicrophone16_s jarg1_);
  public final static native long new_SLMicrophone16_s();
  public final static native void delete_SLMicrophone16_s(long jarg1);
  public final static native void SLMicrophone32_s_xPos_set(long jarg1, SLMicrophone32_s jarg1_, int jarg2);
  public final static native int SLMicrophone32_s_xPos_get(long jarg1, SLMicrophone32_s jarg1_);
  public final static native void SLMicrophone32_s_yPos_set(long jarg1, SLMicrophone32_s jarg1_, int jarg2);
  public final static native int SLMicrophone32_s_yPos_get(long jarg1, SLMicrophone32_s jarg1_);
  public final static native void SLMicrophone32_s_delay_set(long jarg1, SLMicrophone32_s jarg1_, int jarg2);
  public final static native int SLMicrophone32_s_delay_get(long jarg1, SLMicrophone32_s jarg1_);
  public final static native void SLMicrophone32_s_gain_set(long jarg1, SLMicrophone32_s jarg1_, int jarg2);
  public final static native int SLMicrophone32_s_gain_get(long jarg1, SLMicrophone32_s jarg1_);
  public final static native long new_SLMicrophone32_s();
  public final static native void delete_SLMicrophone32_s(long jarg1);
  public final static native int SIGLIB_CLIP_ABOVE_get();
  public final static native int SIGLIB_CLIP_BOTH_get();
  public final static native int SIGLIB_CLIP_BELOW_get();
  public final static native int SIGLIB_DEGLITCH_ABOVE_get();
  public final static native int SIGLIB_DEGLITCH_BOTH_get();
  public final static native int SIGLIB_DEGLITCH_BELOW_get();
  public final static native double SUF_SiglibVersion();
  public final static native void SUF_PrintArray(long jarg1, int jarg2);
  public final static native void SUF_PrintComplexArray(long jarg1, long jarg2, int jarg3);
  public final static native void SUF_PrintMatrix(long jarg1, int jarg2, int jarg3);
  public final static native void SUF_PrintPolar(long jarg1, SLComplexPolar_s jarg1_);
  public final static native void SUF_PrintRectangular(long jarg1, SLComplexRect_s jarg1_);
  public final static native void SUF_PrintIIRCoefficients(long jarg1, int jarg2);
  public final static native int SUF_ClearDebugfprintf();
  public final static native int SUF_Debugfprintf(String jarg1);
  public final static native int SUF_Debugvfprintf(String jarg1, long jarg2);
  public final static native int SUF_DebugPrintArray(long jarg1, int jarg2);
  public final static native int SUF_DebugPrintComplexArray(long jarg1, long jarg2, int jarg3);
  public final static native int SUF_DebugPrintMatrix(long jarg1, int jarg2, int jarg3);
  public final static native int SUF_DebugPrintPolar(long jarg1, SLComplexPolar_s jarg1_);
  public final static native int SUF_DebugPrintRectangular(long jarg1, SLComplexRect_s jarg1_);
  public final static native int SUF_DebugPrintIIRCoefficients(long jarg1, int jarg2);
  public final static native int SUF_DebugPrintCount(String jarg1);
  public final static native String SUF_StrError(int jarg1);
  public final static native void SIF_Fft(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_Rfft(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void SDA_Cfft(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void SDA_Cifft(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void SDA_BitReverseReorder(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_IndexBitReverseReorder(long jarg1, long jarg2, int jarg3);
  public final static native void SIF_FastBitReverseReorder(long jarg1, int jarg2);
  public final static native void SDA_RealRealCepstrum(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void SDA_RealComplexCepstrum(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void SDA_ComplexComplexCepstrum(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7, int jarg8);
  public final static native void SIF_FftTone(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_RfftTone(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native int SIF_ZoomFft(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, long jarg14, long jarg15, long jarg16, int jarg17, int jarg18, int jarg19, int jarg20);
  public final static native void SDA_ZoomFft(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, double jarg11, int jarg12, int jarg13, int jarg14, long jarg15, long jarg16, long jarg17, long jarg18, long jarg19, long jarg20, long jarg21, long jarg22, long jarg23, long jarg24, int jarg25, int jarg26, int jarg27, int jarg28, int jarg29, int jarg30, int jarg31);
  public final static native void SIF_ZoomFftSimple(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10, int jarg11, int jarg12);
  public final static native void SDA_ZoomFftSimple(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, double jarg11, int jarg12, int jarg13, int jarg14, long jarg15, long jarg16, int jarg17, int jarg18, int jarg19);
  public final static native void SIF_FdHilbert(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_FdHilbert(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, double jarg6, int jarg7, int jarg8);
  public final static native void SIF_FdAnalytic(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_FdAnalytic(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, double jarg6, int jarg7, int jarg8);
  public final static native void SDA_InstantFreq(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_Rft(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_Rift(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_Cft(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_Cift(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_FftShift(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_CfftShift(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_FftExtend(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SDA_CfftExtend(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void SIF_FftArb(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, int jarg14);
  public final static native int SUF_FftArbAllocLength(int jarg1);
  public final static native void SDA_RfftArb(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, int jarg14, int jarg15, int jarg16, double jarg17, double jarg18, int jarg19);
  public final static native void SDA_CfftArb(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, long jarg14, int jarg15, int jarg16, int jarg17, double jarg18, double jarg19, int jarg20);
  public final static native void SDA_CifftArb(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, long jarg14, int jarg15, int jarg16, int jarg17, int jarg18);
  public final static native void SIF_FastAutoCrossPowerSpectrum(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_FastAutoPowerSpectrum(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6, double jarg7);
  public final static native void SDA_FastCrossPowerSpectrum(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7, int jarg8, double jarg9);
  public final static native void SIF_ArbAutoCrossPowerSpectrum(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, int jarg14);
  public final static native void SDA_ArbAutoPowerSpectrum(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12, int jarg13, int jarg14, int jarg15, double jarg16, double jarg17, int jarg18);
  public final static native void SDA_ArbCrossPowerSpectrum(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, long jarg14, int jarg15, int jarg16, int jarg17, double jarg18, double jarg19, int jarg20);
  public final static native int SIF_WelchPowerSpectrum(long jarg1, long jarg2, int jarg3, double jarg4, long jarg5, long jarg6, long jarg7, int jarg8, long jarg9, int jarg10);
  public final static native void SDA_WelchRealPowerSpectrum(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7, long jarg8, long jarg9, long jarg10, int jarg11, int jarg12, double jarg13, int jarg14, double jarg15, int jarg16);
  public final static native void SDA_WelchComplexPowerSpectrum(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, int jarg9, long jarg10, long jarg11, long jarg12, int jarg13, int jarg14, double jarg15, int jarg16, double jarg17, int jarg18);
  public final static native void SIF_MagnitudeSquaredCoherence(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_MagnitudeSquaredCoherence(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, int jarg11, int jarg12, double jarg13);
  public final static native void SIF_FirOverlapAdd(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10);
  public final static native void SDA_FirOverlapAdd(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, double jarg9, int jarg10, int jarg11, int jarg12, int jarg13);
  public final static native void SIF_FirOverlapSave(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10);
  public final static native void SDA_FirOverlapSave(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, double jarg9, int jarg10, int jarg11, int jarg12, int jarg13);
  public final static native void SIF_FftConvolvePre(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7, int jarg8);
  public final static native void SDA_FftConvolvePre(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10, int jarg11, double jarg12);
  public final static native void SDA_FftConvolveArb(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10, int jarg11, double jarg12);
  public final static native void SIF_FftCorrelatePre(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7, int jarg8);
  public final static native void SDA_FftCorrelatePre(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10, int jarg11, double jarg12);
  public final static native void SDA_FftCorrelateArb(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10, int jarg11, double jarg12);
  public final static native void SIF_Czt(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, int jarg14, int jarg15, int jarg16, int jarg17);
  public final static native void SIF_Awn(long jarg1, long jarg2, long jarg3, SLComplexRect_s jarg3_, long jarg4, SLComplexRect_s jarg4_, long jarg5, SLComplexRect_s jarg5_, int jarg6);
  public final static native void SIF_Vl(long jarg1, long jarg2, long jarg3, SLComplexRect_s jarg3_, long jarg4, SLComplexRect_s jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void SIF_Wm(long jarg1, long jarg2, long jarg3, SLComplexRect_s jarg3_, long jarg4, SLComplexRect_s jarg4_, int jarg5);
  public final static native int SIF_Window(long jarg1, int jarg2, double jarg3, int jarg4);
  public final static native int SIF_TableTopWindow(long jarg1, int jarg2, double jarg3, int jarg4, int jarg5);
  public final static native void SDA_Window(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_ComplexWindow(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native double SDA_WindowInverseCoherentGain(long jarg1, int jarg2);
  public final static native double SDS_I0Bessel(double jarg1);
  public final static native void SIF_Fir(long jarg1, long jarg2, int jarg3);
  public final static native double SDS_Fir(double jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_Fir(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void SDS_FirAddSample(double jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_FirAddSamples(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void SIF_Comb(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native double SDS_Comb(double jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_Comb(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void SIF_FirComplex(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDS_FirComplex(double jarg1, double jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native void SDA_FirComplex(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10, int jarg11);
  public final static native void SIF_FirWithStore(long jarg1, int jarg2);
  public final static native double SDS_FirWithStore(double jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_FirWithStore(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void SIF_FirComplexWithStore(long jarg1, long jarg2, int jarg3);
  public final static native void SDS_FirComplexWithStore(double jarg1, double jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, int jarg9);
  public final static native void SDA_FirComplexWithStore(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, int jarg9, int jarg10);
  public final static native void SDS_FirWithStoreAddSample(double jarg1, long jarg2, int jarg3);
  public final static native void SDA_FirWithStoreAddSamples(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SIF_FirExtendedArray(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native double SDS_FirExtendedArray(double jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_FirExtendedArray(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void SIF_FirComplexExtendedArray(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8);
  public final static native void SDS_FirComplexExtendedArray(double jarg1, double jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10);
  public final static native void SDA_FirComplexExtendedArray(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10, int jarg11);
  public final static native void SDS_FirExtendedArrayAddSample(double jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_FirExtendedArrayAddSamples(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native int SIF_FirLowPassFilter(long jarg1, double jarg2, int jarg3, int jarg4);
  public final static native int SIF_FirHighPassFilter(long jarg1, double jarg2, int jarg3, int jarg4);
  public final static native int SIF_FirBandPassFilter(long jarg1, double jarg2, double jarg3, int jarg4, int jarg5);
  public final static native void SIF_FirLowPassFilterWindow(long jarg1, double jarg2, long jarg3, int jarg4);
  public final static native void SIF_FirHighPassFilterWindow(long jarg1, double jarg2, long jarg3, int jarg4);
  public final static native void SIF_FirBandPassFilterWindow(long jarg1, double jarg2, double jarg3, long jarg4, int jarg5);
  public final static native int SUF_FirKaiserApproximation(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void SIF_FirMatchedFilter(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_FirFilterInverseCoherentGain(long jarg1, int jarg2);
  public final static native void SIF_TappedDelayLine(long jarg1, long jarg2, int jarg3);
  public final static native double SDS_TappedDelayLine(double jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void SDA_TappedDelayLine(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7, int jarg8, int jarg9);
  public final static native void SIF_TappedDelayLineComplex(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDS_TappedDelayLineComplex(double jarg1, double jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, int jarg11, int jarg12);
  public final static native void SDA_TappedDelayLineComplex(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, int jarg11, int jarg12, int jarg13);
  public final static native void SIF_TappedDelayLineIQ(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDS_TappedDelayLineIQ(double jarg1, double jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, int jarg11, int jarg12);
  public final static native void SDA_TappedDelayLineIQ(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, int jarg11, int jarg12, int jarg13);
  public final static native void SIF_FirPolyPhaseGenerate(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void SIF_Iir(long jarg1, int jarg2);
  public final static native double SDS_Iir(double jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_Iir(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native double SDS_IirMac(double jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_IirMac(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void SIF_IirOrder(long jarg1, long jarg2, int jarg3);
  public final static native double SDS_IirOrder(double jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_IirOrder(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void SIF_IirNc(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_IirNc(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void SDA_BilinearTransform(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, long jarg4, SLComplexRect_s jarg4_, double jarg5, double jarg6, int jarg7, int jarg8, int jarg9);
  public final static native double SDS_PreWarp(double jarg1, double jarg2);
  public final static native void SDA_MatchedZTransform(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, long jarg4, SLComplexRect_s jarg4_, double jarg5, int jarg6, int jarg7);
  public final static native void SDA_IirZplaneToCoeffs(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native void SDA_IirZplanePolarToCoeffs(long jarg1, SLComplexPolar_s jarg1_, long jarg2, SLComplexPolar_s jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native void SDA_IirZplaneLpfToLpf(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, long jarg4, SLComplexRect_s jarg4_, double jarg5, double jarg6, double jarg7, int jarg8, int jarg9);
  public final static native void SDA_IirZplaneLpfToHpf(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, long jarg4, SLComplexRect_s jarg4_, double jarg5, double jarg6, double jarg7, int jarg8, int jarg9);
  public final static native void SDA_IirZplaneLpfToBpf(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, long jarg4, SLComplexRect_s jarg4_, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, int jarg10);
  public final static native void SDA_IirZplaneLpfToBsf(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, long jarg4, SLComplexRect_s jarg4_, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9, int jarg10);
  public final static native double SDA_IirModifyFilterGain(long jarg1, long jarg2, double jarg3, double jarg4, int jarg5);
  public final static native void SIF_IirLowPassFilter(long jarg1, double jarg2, double jarg3);
  public final static native void SIF_IirHighPassFilter(long jarg1, double jarg2, double jarg3);
  public final static native void SIF_IirAllPassFilter(long jarg1, double jarg2, double jarg3);
  public final static native void SIF_IirBandPassFilter(long jarg1, double jarg2, double jarg3);
  public final static native void SIF_IirNotchFilter(long jarg1, double jarg2, double jarg3);
  public final static native void SIF_IirPeakingFilter(long jarg1, double jarg2, double jarg3, double jarg4);
  public final static native void SIF_IirLowShelfFilter(long jarg1, double jarg2, double jarg3, double jarg4);
  public final static native void SIF_IirHighShelfFilter(long jarg1, double jarg2, double jarg3, double jarg4);
  public final static native double SDS_IirRemoveDC(double jarg1, long jarg2, long jarg3, double jarg4);
  public final static native void SDA_IirRemoveDC(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, int jarg6);
  public final static native void SIF_OnePole(long jarg1);
  public final static native double SDS_OnePole(double jarg1, double jarg2, long jarg3);
  public final static native void SDA_OnePole(long jarg1, long jarg2, double jarg3, long jarg4, int jarg5);
  public final static native double SDS_OnePoleNormalized(double jarg1, double jarg2, long jarg3);
  public final static native void SDA_OnePoleNormalized(long jarg1, long jarg2, double jarg3, long jarg4, int jarg5);
  public final static native void SDA_OnePolePerSample(long jarg1, long jarg2, long jarg3, double jarg4, int jarg5);
  public final static native double SDS_OnePoleTimeConstantToFilterCoeff(double jarg1, double jarg2);
  public final static native double SDS_OnePoleCutOffFrequencyToFilterCoeff(double jarg1, double jarg2);
  public final static native void SIF_AllPole(long jarg1, long jarg2, int jarg3);
  public final static native double SDS_AllPole(double jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_AllPole(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void SDA_ZDomainCoefficientReorg(long jarg1, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, int jarg4);
  public final static native int SIF_IirNotchFilter2(long jarg1, double jarg2, double jarg3, int jarg4);
  public final static native int SIF_IirNormalizedCoefficients(long jarg1, int jarg2, int jarg3);
  public final static native int SIF_IirNormalizedSPlaneCoefficients(long jarg1, SLComplexRect_s jarg1_, int jarg2, int jarg3);
  public final static native void SDA_TranslateSPlaneCutOffFrequency(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, double jarg3, int jarg4);
  public final static native double SDA_IirLpLpShift(long jarg1, long jarg2, double jarg3, double jarg4, double jarg5, int jarg6);
  public final static native double SDA_IirLpHpShift(long jarg1, long jarg2, double jarg3, double jarg4, double jarg5, int jarg6);
  public final static native void SIF_Iir2PoleLpf(long jarg1, long jarg2, double jarg3, double jarg4);
  public final static native double SDS_Iir2Pole(double jarg1, long jarg2, long jarg3);
  public final static native void SDA_Iir2Pole(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_IirNegateAlphaCoeffs(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_Integrate(long jarg1, long jarg2, double jarg3, double jarg4, long jarg5, int jarg6);
  public final static native void SDA_Differentiate(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SIF_LeakyIntegrator(long jarg1);
  public final static native double SDS_LeakyIntegrator1(double jarg1, long jarg2, double jarg3, double jarg4);
  public final static native double SDS_LeakyIntegrator2(double jarg1, long jarg2, double jarg3, double jarg4);
  public final static native void SIF_HilbertTransformer(long jarg1, int jarg2);
  public final static native double SIF_GoertzelFilter(long jarg1, double jarg2, int jarg3);
  public final static native void SDA_GoertzelFilter(long jarg1, long jarg2, long jarg3, double jarg4, int jarg5);
  public final static native double SDS_GoertzelFilter(double jarg1, long jarg2, double jarg3);
  public final static native double SIF_GoertzelDetect(double jarg1, int jarg2);
  public final static native double SDA_GoertzelDetect(long jarg1, double jarg2, int jarg3);
  public final static native long SIF_GoertzelDetectComplex(double jarg1, int jarg2);
  public final static native long SDA_GoertzelDetectComplex(long jarg1, long jarg2, SLComplexRect_s jarg2_, int jarg3);
  public final static native void SIF_GaussianFilter(long jarg1, double jarg2, int jarg3);
  public final static native void SIF_GaussianFilter2(long jarg1, double jarg2, int jarg3);
  public final static native void SIF_RaisedCosineFilter(long jarg1, double jarg2, double jarg3, int jarg4);
  public final static native void SIF_RootRaisedCosineFilter(long jarg1, double jarg2, double jarg3, int jarg4);
  public final static native double SDS_ZTransform(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, int jarg4, int jarg5);
  public final static native double SDS_ZTransformDB(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, int jarg4, int jarg5);
  public final static native int SUF_EstimateBPFilterLength(double jarg1, double jarg2, int jarg3, int jarg4);
  public final static native void SUF_EstimateBPFilterError(double jarg1, double jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void SDA_LinearMicrophoneArrayBeamPattern(int jarg1, double jarg2, double jarg3, long jarg4, long jarg5, double jarg6, double jarg7, int jarg8);
  public final static native void SDA_MicrophoneArrayCalculateDelays(int jarg1, long jarg2, SLMicrophone_s jarg2_, double jarg3);
  public final static native void SDA_MicrophoneArrayBeamPattern(int jarg1, long jarg2, SLMicrophone_s jarg2_, double jarg3, double jarg4, long jarg5, long jarg6, double jarg7, double jarg8, int jarg9, double jarg10);
  public final static native void SIF_Lms(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native double SDS_Lms(double jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_LmsUpdate(long jarg1, long jarg2, long jarg3, int jarg4, double jarg5, double jarg6);
  public final static native void SDA_LeakyLmsUpdate(long jarg1, long jarg2, long jarg3, int jarg4, double jarg5, double jarg6, double jarg7);
  public final static native void SDA_NormalizedLmsUpdate(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, double jarg7);
  public final static native void SDA_SignErrorLmsUpdate(long jarg1, long jarg2, long jarg3, int jarg4, double jarg5, double jarg6);
  public final static native void SDA_SignDataLmsUpdate(long jarg1, long jarg2, long jarg3, int jarg4, double jarg5, double jarg6);
  public final static native void SDA_SignSignLmsUpdate(long jarg1, long jarg2, long jarg3, int jarg4, double jarg5, double jarg6);
  public final static native void SDA_ConvolveLinear(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void SDA_ConvolvePartial(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void SDA_ConvolveCircular(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_ConvolveLinearComplex(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7, int jarg8);
  public final static native void SDA_ConvolvePartialComplex(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7, int jarg8);
  public final static native void SDA_ConvolveCircularComplex(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native void SDA_Deconvolution(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void SDA_CorrelateLinear(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void SDA_CorrelatePartial(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void SDA_CorrelateCircular(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_Covariance(long jarg1, long jarg2, long jarg3, double jarg4, double jarg5, int jarg6, int jarg7, int jarg8);
  public final static native void SDA_CovariancePartial(long jarg1, long jarg2, long jarg3, double jarg4, double jarg5, int jarg6, int jarg7);
  public final static native void SDA_CorrelateLinearReturnPeak(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void SIF_FixedDelay(long jarg1, long jarg2, int jarg3);
  public final static native double SDS_FixedDelay(double jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_FixedDelay(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void SIF_FixedDelayComplex(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDS_FixedDelayComplex(double jarg1, double jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8);
  public final static native void SDA_FixedDelayComplex(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void SDA_ShortFixedDelay(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native int SIF_VariableDelay(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native double SDS_VariableDelay(double jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_VariableDelay(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native int SIF_VariableDelayComplex(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void SDS_VariableDelayComplex(double jarg1, double jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, int jarg9);
  public final static native void SDA_VariableDelayComplex(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, int jarg9, int jarg10);
  public final static native int SUF_IncreaseVariableDelay(long jarg1, long jarg2, int jarg3);
  public final static native int SUF_DecreaseVariableDelay(long jarg1, long jarg2, int jarg3);
  public final static native int SDA_Align(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void SIM_Fft2d(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, double jarg7, long jarg8, int jarg9, int jarg10);
  public final static native void SIF_Fft2d(long jarg1, long jarg2, int jarg3);
  public final static native void SIM_Conv3x3(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void SIM_Sobel3x3(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SIM_SobelVertical3x3(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SIM_SobelHorizontal3x3(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SIM_Median3x3(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native int SIF_ConvCoefficients3x3(long jarg1, int jarg2);
  public final static native long SIM_Max(long jarg1, int jarg2);
  public final static native long SIM_Min(long jarg1, int jarg2);
  public final static native void SIF_Dct8x8();
  public final static native void SIM_Dct8x8(long jarg1, long jarg2);
  public final static native void SIM_Idct8x8(long jarg1, long jarg2);
  public final static native void SIM_ZigZagScan(long jarg1, long jarg2, int jarg3);
  public final static native void SIM_ZigZagDescan(long jarg1, long jarg2, int jarg3);
  public final static native int SDA_SignalGenerate(long jarg1, int jarg2, double jarg3, int jarg4, double jarg5, double jarg6, double jarg7, double jarg8, long jarg9, long jarg10, int jarg11);
  public final static native int SDS_SignalGenerate(long jarg1, int jarg2, double jarg3, int jarg4, double jarg5, double jarg6, double jarg7, double jarg8, long jarg9, long jarg10);
  public final static native void SIF_Resonator(long jarg1, double jarg2, long jarg3, long jarg4);
  public final static native void SDA_Resonator(long jarg1, long jarg2, long jarg3, double jarg4, double jarg5, int jarg6);
  public final static native void SIF_Resonator1(long jarg1, double jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void SDA_Resonator1(long jarg1, double jarg2, long jarg3, long jarg4, double jarg5, double jarg6, int jarg7);
  public final static native void SDA_Resonator1Add(long jarg1, double jarg2, long jarg3, long jarg4, double jarg5, double jarg6, int jarg7);
  public final static native void SDA_SignalGeneratePolarWhiteNoise(long jarg1, SLComplexRect_s jarg1_, double jarg2, int jarg3, int jarg4);
  public final static native long SDS_SignalGeneratePolarWhiteNoise(double jarg1);
  public final static native void SDA_SignalGeneratePolarGaussianNoise(long jarg1, SLComplexRect_s jarg1_, double jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native long SDS_SignalGeneratePolarGaussianNoise(double jarg1, long jarg2, long jarg3);
  public final static native void SDA_SignalAddPolarJitterAndGaussianNoise(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, double jarg3, double jarg4, long jarg5, double jarg6, long jarg7, long jarg8, int jarg9);
  public final static native long SDS_SignalAddPolarJitterAndGaussianNoise(long jarg1, SLComplexRect_s jarg1_, double jarg2, double jarg3, long jarg4, double jarg5, long jarg6, long jarg7);
  public final static native double SDA_BitErrorRate(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native void SDA_Interleave(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SDA_Deinterleave(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native double SCV_EuclideanDistance(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_);
  public final static native double SCV_EuclideanDistanceSquared(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_);
  public final static native short SDS_ManchesterEncode(short jarg1);
  public final static native short SDS_ManchesterDecode(short jarg1);
  public final static native int SDS_ManchesterEncodeByte(short jarg1);
  public final static native int SDS_ManchesterDecodeByte(int jarg1);
  public final static native void SIF_DetectNumericalWordSequence(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native int SDS_DetectNumericalWordSequence(int jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void SIF_DetectNumericalBitSequence(long jarg1, long jarg2, int jarg3);
  public final static native int SDS_DetectNumericalBitSequence(int jarg1, int jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void SIF_DetectCharacterSequence(long jarg1, int jarg2);
  public final static native int SDS_DetectCharacterSequence(short jarg1, long jarg2, long jarg3, int jarg4);
  public final static native double SDS_ErrorVector(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_);
  public final static native double SDS_ErrorVectorMagnitudePercent(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_);
  public final static native double SDS_ErrorVectorMagnitudeDecibels(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_);
  public final static native int SDS_ReverseDiBits(int jarg1);
  public final static native void SDS_QpskBitErrorCount(int jarg1, int jarg2, long jarg3, long jarg4);
  public final static native double SDS_BitErrorRate(int jarg1, int jarg2);
  public final static native void SIF_PhaseLockedLoop(long jarg1, long jarg2, int jarg3, double jarg4, long jarg5, long jarg6, long jarg7, int jarg8, long jarg9, long jarg10, long jarg11, int jarg12, long jarg13);
  public final static native double SDS_PhaseLockedLoop(double jarg1, long jarg2, double jarg3, long jarg4, int jarg5, double jarg6, long jarg7, long jarg8, long jarg9, int jarg10, long jarg11, long jarg12, long jarg13, int jarg14, long jarg15);
  public final static native void SDA_PhaseLockedLoop(long jarg1, long jarg2, long jarg3, double jarg4, long jarg5, int jarg6, double jarg7, long jarg8, long jarg9, long jarg10, int jarg11, long jarg12, long jarg13, long jarg14, int jarg15, long jarg16, int jarg17);
  public final static native int SIF_CostasLoop(long jarg1, long jarg2, int jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10, long jarg11, long jarg12);
  public final static native double SDS_CostasLoop(double jarg1, long jarg2, double jarg3, long jarg4, int jarg5, double jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, int jarg12, long jarg13, double jarg14, int jarg15, long jarg16);
  public final static native void SDA_CostasLoop(long jarg1, long jarg2, long jarg3, double jarg4, long jarg5, int jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12, int jarg13, long jarg14, double jarg15, int jarg16, long jarg17, int jarg18);
  public final static native void SRF_CostasLoop(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7, long jarg8);
  public final static native void SIF_180DegreePhaseDetect(long jarg1, long jarg2, int jarg3, double jarg4, long jarg5, long jarg6, long jarg7, int jarg8, long jarg9);
  public final static native int SDA_180DegreePhaseDetect(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, long jarg7, long jarg8, long jarg9, int jarg10, long jarg11, int jarg12);
  public final static native void SIF_TriggerReverberator(long jarg1, long jarg2, long jarg3);
  public final static native void SDA_TriggerReverberator(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native double SDS_TriggerReverberator(double jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native int SDA_TriggerSelector(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native int SIF_EarlyLateGate(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7, long jarg8, long jarg9, long jarg10, int jarg11, double jarg12, long jarg13, long jarg14, long jarg15, long jarg16, long jarg17, int jarg18, long jarg19, int jarg20);
  public final static native void SDA_EarlyLateGate(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, long jarg9, long jarg10, long jarg11, int jarg12, double jarg13, long jarg14, long jarg15, long jarg16, long jarg17, long jarg18, int jarg19, int jarg20);
  public final static native void SDA_EarlyLateGateDebug(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, long jarg9, long jarg10, long jarg11, int jarg12, double jarg13, long jarg14, long jarg15, long jarg16, long jarg17, long jarg18, long jarg19, long jarg20, int jarg21, int jarg22);
  public final static native double SDS_EarlyLateGate(double jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7, long jarg8, long jarg9, long jarg10, int jarg11, double jarg12, long jarg13, long jarg14, long jarg15, long jarg16, long jarg17, int jarg18);
  public final static native int SIF_EarlyLateGateSquarePulse(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7, long jarg8, long jarg9, int jarg10, double jarg11, long jarg12, long jarg13, long jarg14, long jarg15, long jarg16, int jarg17, long jarg18, int jarg19);
  public final static native void SDA_EarlyLateGateSquarePulse(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, long jarg9, long jarg10, long jarg11, int jarg12, double jarg13, long jarg14, long jarg15, long jarg16, long jarg17, long jarg18, int jarg19, int jarg20);
  public final static native void SDA_EarlyLateGateSquarePulseDebug(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, long jarg9, long jarg10, long jarg11, int jarg12, double jarg13, long jarg14, long jarg15, long jarg16, long jarg17, long jarg18, long jarg19, long jarg20, int jarg21, int jarg22);
  public final static native double SDS_EarlyLateGateSquarePulse(double jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7, long jarg8, long jarg9, long jarg10, int jarg11, double jarg12, long jarg13, long jarg14, long jarg15, long jarg16, long jarg17, int jarg18);
  public final static native int SDS_ConvEncoderK3(short jarg1, long jarg2);
  public final static native void SIF_ViterbiDecoderK3(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native short SDS_ViterbiDecoderK3(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8);
  public final static native long SDS_ConvEncoderV32(short jarg1, long jarg2, long jarg3);
  public final static native void SIF_ViterbiDecoderV32(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native short SDS_ViterbiDecoderV32(long jarg1, SLComplexRect_s jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8);
  public final static native void SIF_AmplitudeModulate(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_AmplitudeModulate(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native double SDS_AmplitudeModulate(double jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SIF_AmplitudeModulate2(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_AmplitudeModulate2(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, int jarg6, int jarg7);
  public final static native double SDS_AmplitudeModulate2(double jarg1, long jarg2, long jarg3, double jarg4, int jarg5);
  public final static native int SIF_ComplexShift(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void SDA_ComplexShift(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, double jarg10, int jarg11, int jarg12, int jarg13);
  public final static native void SIF_FrequencyModulate(long jarg1, long jarg2, int jarg3);
  public final static native double SDS_FrequencyModulate(double jarg1, double jarg2, double jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void SDA_FrequencyModulate(long jarg1, long jarg2, double jarg3, double jarg4, long jarg5, long jarg6, int jarg7, int jarg8);
  public final static native void SDA_FrequencyDemodulate(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, int jarg6);
  public final static native void SIF_FrequencyModulateComplex(long jarg1, long jarg2, int jarg3);
  public final static native void SDS_FrequencyModulateComplex(double jarg1, long jarg2, long jarg3, double jarg4, double jarg5, long jarg6, long jarg7, int jarg8);
  public final static native void SDA_FrequencyModulateComplex(long jarg1, long jarg2, long jarg3, double jarg4, double jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void SDA_DeltaModulate(long jarg1, long jarg2, long jarg3, double jarg4, int jarg5);
  public final static native void SDA_DeltaDemodulate(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_DeltaModulate2(long jarg1, long jarg2, long jarg3, double jarg4, int jarg5);
  public final static native int SIF_CostasQamDemodulate(long jarg1, long jarg2, int jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10, long jarg11, long jarg12, long jarg13, long jarg14, long jarg15, long jarg16, long jarg17, int jarg18, long jarg19, long jarg20, long jarg21, int jarg22, double jarg23, long jarg24, long jarg25, long jarg26, long jarg27, long jarg28, long jarg29, int jarg30, long jarg31, long jarg32, long jarg33);
  public final static native int SDS_CostasQamDemodulate(double jarg1, long jarg2, long jarg3, long jarg4, double jarg5, long jarg6, int jarg7, double jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, int jarg14, long jarg15, double jarg16, int jarg17, long jarg18, long jarg19, long jarg20, long jarg21, long jarg22, long jarg23, int jarg24, long jarg25, long jarg26, long jarg27, int jarg28, double jarg29, long jarg30, long jarg31, long jarg32, long jarg33, long jarg34, int jarg35, long jarg36, long jarg37, long jarg38, int jarg39);
  public final static native int SDS_CostasQamDemodulateDebug(double jarg1, long jarg2, long jarg3, long jarg4, double jarg5, long jarg6, int jarg7, double jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, int jarg14, long jarg15, double jarg16, int jarg17, long jarg18, long jarg19, long jarg20, long jarg21, long jarg22, long jarg23, int jarg24, long jarg25, long jarg26, long jarg27, int jarg28, double jarg29, long jarg30, long jarg31, long jarg32, long jarg33, long jarg34, int jarg35, long jarg36, long jarg37, long jarg38, int jarg39, long jarg40, long jarg41, long jarg42, long jarg43);
  public final static native int SDA_CostasQamDemodulate(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, long jarg6, int jarg7, double jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, int jarg14, long jarg15, double jarg16, int jarg17, long jarg18, long jarg19, long jarg20, long jarg21, long jarg22, long jarg23, int jarg24, long jarg25, long jarg26, long jarg27, int jarg28, double jarg29, long jarg30, long jarg31, long jarg32, long jarg33, long jarg34, int jarg35, long jarg36, long jarg37, long jarg38, int jarg39, int jarg40);
  public final static native int SDA_CostasQamDemodulateDebug(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, long jarg6, int jarg7, double jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, int jarg14, long jarg15, double jarg16, int jarg17, long jarg18, long jarg19, long jarg20, long jarg21, long jarg22, long jarg23, int jarg24, long jarg25, long jarg26, long jarg27, int jarg28, double jarg29, long jarg30, long jarg31, long jarg32, long jarg33, long jarg34, int jarg35, long jarg36, long jarg37, long jarg38, int jarg39, int jarg40, long jarg41, long jarg42, long jarg43);
  public final static native void SIF_QpskModulate(long jarg1, double jarg2, int jarg3, long jarg4, long jarg5, long jarg6, SLComplexRect_s jarg6_, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, double jarg12, double jarg13, int jarg14, int jarg15);
  public final static native void SDA_QpskModulate(int jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6, long jarg7, SLComplexRect_s jarg7_, int jarg8, int jarg9, long jarg10, long jarg11, long jarg12, long jarg13, long jarg14, int jarg15, int jarg16);
  public final static native void SIF_QpskDemodulate(long jarg1, double jarg2, int jarg3, long jarg4, long jarg5, long jarg6, SLComplexRect_s jarg6_, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, double jarg12, double jarg13, int jarg14, int jarg15);
  public final static native int SDA_QpskDemodulate(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, long jarg6, SLComplexRect_s jarg6_, int jarg7, int jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, int jarg14, int jarg15);
  public final static native int SDA_QpskDemodulateDebug(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, long jarg6, SLComplexRect_s jarg6_, int jarg7, int jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, int jarg14, int jarg15, long jarg16, long jarg17, SLComplexRect_s jarg17_);
  public final static native int SDA_QpskDifferentialEncode(int jarg1, long jarg2);
  public final static native int SDA_QpskDifferentialDecode(int jarg1, long jarg2);
  public final static native void SIF_FskModulate(long jarg1, double jarg2, int jarg3);
  public final static native void SDA_FskModulateByte(int jarg1, long jarg2, long jarg3, long jarg4, long jarg5, double jarg6, double jarg7, int jarg8, int jarg9);
  public final static native int SDA_FskDemodulateByte(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void SDA_CpfskModulateByte(int jarg1, long jarg2, long jarg3, long jarg4, double jarg5, double jarg6, int jarg7, int jarg8);
  public final static native void SDA_FskModulate(int jarg1, long jarg2, long jarg3, long jarg4, long jarg5, double jarg6, double jarg7, int jarg8, int jarg9);
  public final static native int SDA_FskDemodulate(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void SDA_CpfskModulate(int jarg1, long jarg2, long jarg3, long jarg4, double jarg5, double jarg6, int jarg7, int jarg8);
  public final static native void SIF_Qam16Modulate(long jarg1, double jarg2, int jarg3, long jarg4, long jarg5, long jarg6, SLComplexRect_s jarg6_, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, double jarg12, double jarg13, int jarg14, int jarg15);
  public final static native void SDA_Qam16Modulate(int jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6, long jarg7, SLComplexRect_s jarg7_, int jarg8, int jarg9, long jarg10, long jarg11, long jarg12, long jarg13, long jarg14, int jarg15, int jarg16);
  public final static native void SIF_Qam16Demodulate(long jarg1, double jarg2, int jarg3, long jarg4, long jarg5, long jarg6, SLComplexRect_s jarg6_, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, double jarg12, double jarg13, int jarg14, int jarg15);
  public final static native int SDA_Qam16Demodulate(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, long jarg6, SLComplexRect_s jarg6_, int jarg7, int jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, int jarg14, int jarg15);
  public final static native int SDA_Qam16DemodulateDebug(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, long jarg6, SLComplexRect_s jarg6_, int jarg7, int jarg8, long jarg9, long jarg10, long jarg11, long jarg12, long jarg13, int jarg14, int jarg15, long jarg16, long jarg17, SLComplexRect_s jarg17_);
  public final static native int SDA_Qam16DifferentialEncode(int jarg1, long jarg2);
  public final static native int SDA_Qam16DifferentialDecode(int jarg1, long jarg2);
  public final static native void SIF_BpskModulate(long jarg1, double jarg2, long jarg3, int jarg4);
  public final static native void SDA_BpskModulate(int jarg1, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, int jarg7);
  public final static native void SDA_BpskModulateByte(int jarg1, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, int jarg7);
  public final static native void SIF_BpskDemodulate(long jarg1, long jarg2, int jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10, long jarg11, long jarg12, long jarg13, long jarg14);
  public final static native int SDA_BpskDemodulate(long jarg1, long jarg2, double jarg3, long jarg4, int jarg5, double jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, int jarg12, long jarg13, double jarg14, long jarg15, long jarg16, long jarg17, int jarg18);
  public final static native int SDA_BpskDemodulateDebug(long jarg1, long jarg2, double jarg3, long jarg4, int jarg5, double jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, int jarg12, long jarg13, double jarg14, long jarg15, long jarg16, long jarg17, int jarg18, long jarg19);
  public final static native void SIF_DpskModulate(long jarg1, double jarg2, long jarg3, int jarg4, long jarg5);
  public final static native void SDA_DpskModulate(int jarg1, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, int jarg7, long jarg8);
  public final static native void SDA_DpskModulateByte(int jarg1, long jarg2, long jarg3, long jarg4, int jarg5, double jarg6, int jarg7, long jarg8);
  public final static native void SIF_DpskDemodulate(long jarg1, long jarg2, int jarg3, double jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, int jarg10, long jarg11, long jarg12, long jarg13, long jarg14, long jarg15);
  public final static native int SDA_DpskDemodulate(long jarg1, long jarg2, double jarg3, long jarg4, int jarg5, double jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, int jarg12, long jarg13, double jarg14, long jarg15, long jarg16, long jarg17, int jarg18, long jarg19);
  public final static native int SDA_DpskDemodulateDebug(long jarg1, long jarg2, double jarg3, long jarg4, int jarg5, double jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, int jarg12, long jarg13, double jarg14, long jarg15, long jarg16, long jarg17, int jarg18, long jarg19, long jarg20);
  public final static native void SIF_PiByFourDQpskModulate(long jarg1, double jarg2, int jarg3, long jarg4, long jarg5, long jarg6, SLComplexRect_s jarg6_, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, double jarg12, double jarg13, int jarg14, int jarg15, long jarg16);
  public final static native void SDA_PiByFourDQpskModulate(int jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6, long jarg7, SLComplexRect_s jarg7_, int jarg8, int jarg9, long jarg10, long jarg11, long jarg12, long jarg13, long jarg14, int jarg15, int jarg16, long jarg17);
  public final static native void SDS_ChannelizationCode(long jarg1, int jarg2, int jarg3);
  public final static native void SDA_ComplexQPSKSpread(int jarg1, long jarg2, SLComplexRect_s jarg2_, long jarg3, long jarg4, double jarg5, double jarg6, long jarg7, SLComplexRect_s jarg7_, int jarg8);
  public final static native int SDA_ComplexQPSKDeSpread(long jarg1, SLComplexRect_s jarg1_, long jarg2, long jarg3, double jarg4, double jarg5, long jarg6, SLComplexRect_s jarg6_, long jarg7, int jarg8);
  public final static native int SUF_AsyncCharacterLength(int jarg1, int jarg2, int jarg3);
  public final static native int SDA_SyncToAsyncConverter(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native int SDA_AsyncToSyncConverter(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, int jarg6);
  public final static native void SIF_AsyncAddRemoveStopBits(long jarg1);
  public final static native int SDA_AsyncRemoveStopBits(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5, long jarg6, int jarg7);
  public final static native int SDA_AsyncAddStopBits(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5, long jarg6, int jarg7);
  public final static native int SDA_DecreaseWordLength(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native int SDA_IncreaseWordLength(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native int SDS_Scrambler1417(int jarg1, long jarg2);
  public final static native int SDS_Descrambler1417(int jarg1, long jarg2);
  public final static native int SDS_Scrambler1417WithInversion(int jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int SDS_Descrambler1417WithInversion(int jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int SDS_Scrambler1823(int jarg1, long jarg2);
  public final static native int SDS_Descrambler1823(int jarg1, long jarg2);
  public final static native int SDS_Scrambler523(int jarg1, long jarg2);
  public final static native int SDS_Descrambler523(int jarg1, long jarg2);
  public final static native int SDS_ScramblerDescramblerPN9(int jarg1, long jarg2);
  public final static native int SDS_SequenceGeneratorPN9(long jarg1);
  public final static native int SDS_ScramblerDescramblerPN15(int jarg1, long jarg2);
  public final static native int SDS_SequenceGeneratorPN15(long jarg1);
  public final static native int SDS_ScramblerDescramblergCRC24(int jarg1, long jarg2);
  public final static native int SDS_SequenceGeneratorgCRC24(long jarg1);
  public final static native int SDS_ScramblerDescramblergCRC16(int jarg1, long jarg2);
  public final static native int SDS_SequenceGeneratorgCRC16(long jarg1);
  public final static native int SDS_ScramblerDescramblergCRC12(int jarg1, long jarg2);
  public final static native int SDS_SequenceGeneratorgCRC12(long jarg1);
  public final static native int SDS_ScramblerDescramblergCRC8(int jarg1, long jarg2);
  public final static native int SDS_SequenceGeneratorgCRC8(long jarg1);
  public final static native void SDS_LongCodeGenerator3GPPDL(long jarg1, SLComplexRect_s jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void SDS_LongCodeGenerator3GPPUL(long jarg1, SLComplexRect_s jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_Mux2(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_Demux2(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_Mux3(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_Demux3(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_Mux4(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void SDA_Demux4(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void SDA_Mux5(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native void SDA_Demux5(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native void SIF_Decimate(long jarg1);
  public final static native void SDA_Decimate(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void SIF_Interpolate(long jarg1);
  public final static native void SDA_Interpolate(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void SIF_FilterAndDecimate(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_FilterAndDecimate(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void SIF_InterpolateAndFilter(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_InterpolateAndFilter(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native int SDA_ResampleLinear(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native int SDA_ResampleLinearNSamples(long jarg1, long jarg2, double jarg3, int jarg4, int jarg5);
  public final static native double SDA_InterpolateLinear1D(long jarg1, double jarg2, int jarg3);
  public final static native double SDA_InterpolateLinear2D(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native void SIF_ResampleSinc(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SIF_ResampleWindowedSinc(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, double jarg6, int jarg7);
  public final static native int SDA_ResampleSinc(long jarg1, long jarg2, long jarg3, double jarg4, double jarg5, int jarg6, int jarg7);
  public final static native int SDA_ResampleSincNSamples(long jarg1, long jarg2, long jarg3, double jarg4, double jarg5, int jarg6, int jarg7, int jarg8);
  public final static native void SIF_InterpolateSinc1D(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SIF_InterpolateWindowedSinc1D(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, double jarg6, int jarg7);
  public final static native double SDA_InterpolateSinc1D(long jarg1, double jarg2, long jarg3, double jarg4, int jarg5, int jarg6);
  public final static native void SIF_ResampleLinearContiguous(long jarg1, long jarg2);
  public final static native int SDA_ResampleLinearContiguous(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, int jarg6);
  public final static native void SIF_ResampleSincContiguous(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void SIF_ResampleWindowedSincContiguous(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7, double jarg8, int jarg9);
  public final static native int SDA_ResampleSincContiguous(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, double jarg6, double jarg7, int jarg8, int jarg9);
  public final static native void SIF_DtmfGenerate(long jarg1, double jarg2);
  public final static native int SDA_DtmfGenerate(long jarg1, int jarg2, double jarg3, long jarg4, int jarg5);
  public final static native void SIF_DtmfDetect(double jarg1, int jarg2);
  public final static native int SDA_DtmfDetect(long jarg1, int jarg2);
  public final static native int SDA_DtmfDetectAndValidate(long jarg1, double jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native int SUF_AsciiToKeyCode(int jarg1);
  public final static native int SUF_KeyCodeToAscii(int jarg1);
  public final static native void SIF_PreEmphasisFilter(long jarg1);
  public final static native void SDA_PreEmphasisFilter(long jarg1, long jarg2, double jarg3, long jarg4, int jarg5);
  public final static native void SIF_DeEmphasisFilter(long jarg1);
  public final static native void SDA_DeEmphasisFilter(long jarg1, long jarg2, double jarg3, long jarg4, int jarg5);
  public final static native void SDA_AdpcmEncoder(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_AdpcmEncoderDebug(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_AdpcmDecoder(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_Max(long jarg1, int jarg2);
  public final static native double SDA_AbsMax(long jarg1, int jarg2);
  public final static native double SDA_Min(long jarg1, int jarg2);
  public final static native double SDA_AbsMin(long jarg1, int jarg2);
  public final static native double SDA_Middle(long jarg1, int jarg2);
  public final static native double SDA_Range(long jarg1, int jarg2);
  public final static native int SDA_MaxPos(long jarg1, int jarg2);
  public final static native int SDA_AbsMaxPos(long jarg1, int jarg2);
  public final static native int SDA_MinPos(long jarg1, int jarg2);
  public final static native int SDA_AbsMinPos(long jarg1, int jarg2);
  public final static native double SDS_Max(double jarg1, double jarg2);
  public final static native double SDS_AbsMax(double jarg1, double jarg2);
  public final static native double SDS_Min(double jarg1, double jarg2);
  public final static native double SDS_AbsMin(double jarg1, double jarg2);
  public final static native double SDA_LocalMax(long jarg1, int jarg2, int jarg3, int jarg4);
  public final static native double SDA_LocalAbsMax(long jarg1, int jarg2, int jarg3, int jarg4);
  public final static native double SDA_LocalMin(long jarg1, int jarg2, int jarg3, int jarg4);
  public final static native double SDA_LocalAbsMin(long jarg1, int jarg2, int jarg3, int jarg4);
  public final static native void SDA_Max2(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_AbsMax2(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_SignedAbsMax2(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_Min2(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_AbsMin2(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_SignedAbsMin2(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_PeakHold(long jarg1, long jarg2, double jarg3, long jarg4, int jarg5);
  public final static native void SDA_PeakHoldPerSample(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native int SDA_DetectFirstPeakOverThreshold(long jarg1, double jarg2, int jarg3);
  public final static native double SDS_Round(double jarg1, int jarg2);
  public final static native void SDA_Round(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SDA_Clip(long jarg1, long jarg2, double jarg3, int jarg4, int jarg5);
  public final static native void SDA_Threshold(long jarg1, long jarg2, double jarg3, int jarg4, int jarg5);
  public final static native void SDA_SoftThreshold(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native void SDA_ThresholdAndClamp(long jarg1, long jarg2, double jarg3, double jarg4, int jarg5, int jarg6);
  public final static native int SDA_TestOverThreshold(long jarg1, double jarg2, int jarg3);
  public final static native int SDA_TestAbsOverThreshold(long jarg1, double jarg2, int jarg3);
  public final static native void SDA_Clamp(long jarg1, long jarg2, double jarg3, double jarg4, int jarg5, int jarg6);
  public final static native void SDA_SelectMax(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_SelectMin(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_SelectMagnitudeSquaredMax(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native void SDA_SelectMagnitudeSquaredMin(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native void SDA_SetMinValue(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDA_PeakToAverageRatio(long jarg1, double jarg2, int jarg3);
  public final static native double SDA_PeakToAveragePowerRatio(long jarg1, double jarg2, int jarg3);
  public final static native double SDA_PeakToAveragePowerRatioDB(long jarg1, double jarg2, int jarg3);
  public final static native double SDA_PeakToAverageRatioComplex(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDA_PeakToAveragePowerRatioComplex(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDA_PeakToAveragePowerRatioComplexDB(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native void SDA_MovePeakTowardsDeadBand(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void SIF_Envelope(long jarg1);
  public final static native double SDS_Envelope(double jarg1, double jarg2, double jarg3, long jarg4);
  public final static native void SDA_Envelope(long jarg1, long jarg2, double jarg3, double jarg4, long jarg5, int jarg6);
  public final static native void SIF_EnvelopeRMS(long jarg1);
  public final static native double SDS_EnvelopeRMS(double jarg1, double jarg2, double jarg3, long jarg4);
  public final static native void SDA_EnvelopeRMS(long jarg1, long jarg2, double jarg3, double jarg4, long jarg5, int jarg6);
  public final static native void SIF_EnvelopeHilbert(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6, long jarg7);
  public final static native double SDS_EnvelopeHilbert(double jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7, int jarg8, double jarg9, long jarg10);
  public final static native void SDA_EnvelopeHilbert(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, int jarg9, int jarg10, double jarg11, long jarg12, int jarg13);
  public final static native void SDA_Divide(long jarg1, double jarg2, long jarg3, int jarg4);
  public final static native void SDA_Divide2(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_Multiply(long jarg1, double jarg2, long jarg3, int jarg4);
  public final static native void SDA_Multiply2(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDS_ComplexMultiply(double jarg1, double jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native void SDS_ComplexInverse(double jarg1, double jarg2, long jarg3, long jarg4);
  public final static native void SDS_ComplexDivide(double jarg1, double jarg2, double jarg3, double jarg4, long jarg5, long jarg6);
  public final static native void SDA_ComplexScalarMultiply(long jarg1, long jarg2, double jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void SDA_ComplexMultiply2(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native void SDA_ComplexScalarDivide(long jarg1, long jarg2, double jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void SDA_ComplexDivide2(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native double SDA_RealDotProduct(long jarg1, long jarg2, int jarg3);
  public final static native long SDA_ComplexDotProduct(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_Add2(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_Add3(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_Add4(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void SDA_Add5(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native void SDA_WeightedSum(long jarg1, long jarg2, long jarg3, double jarg4, int jarg5);
  public final static native void SDA_Subtract2(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_Offset(long jarg1, double jarg2, long jarg3, int jarg4);
  public final static native double SDA_PositiveOffset(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_NegativeOffset(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_Negate(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_Inverse(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_Square(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_Sqrt(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_Difference(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native double SDA_SumOfDifferences(long jarg1, long jarg2, int jarg3);
  public final static native int SDS_Roots(double jarg1, double jarg2, double jarg3, long jarg4, long jarg5);
  public final static native double SDS_Factorial(double jarg1);
  public final static native double SDS_Permutations(double jarg1, double jarg2);
  public final static native double SDS_Combinations(double jarg1, double jarg2);
  public final static native void SIF_OverlapAndAddLinear(long jarg1, int jarg2);
  public final static native void SDA_OverlapAndAddLinear(long jarg1, long jarg2, long jarg3, double jarg4, int jarg5);
  public final static native void SDA_OverlapAndAddLinearWithClip(long jarg1, long jarg2, long jarg3, double jarg4, double jarg5, int jarg6);
  public final static native void SDA_OverlapAndAddArbitrary(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_OverlapAndAddArbitraryWithClip(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, int jarg6);
  public final static native double SDS_DegreesToRadians(double jarg1);
  public final static native void SDA_DegreesToRadians(long jarg1, long jarg2, int jarg3);
  public final static native double SDS_RadiansToDegrees(double jarg1);
  public final static native void SDA_RadiansToDegrees(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_Rotate(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SDA_Reverse(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_Scale(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDA_MeanSquare(long jarg1, int jarg2);
  public final static native double SDA_MeanSquareError(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDA_RootMeanSquare(long jarg1, int jarg2);
  public final static native void SDA_Magnitude(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_MagnitudeSquared(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native double SDS_Magnitude(double jarg1, double jarg2);
  public final static native double SDS_MagnitudeSquared(double jarg1, double jarg2);
  public final static native double SDS_Phase(double jarg1, double jarg2);
  public final static native void SDA_PhaseWrapped(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_PhaseUnWrapped(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_MagnitudeAndPhaseWrapped(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_MagnitudeAndPhaseUnWrapped(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_MagnitudeSquaredAndPhaseWrapped(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_MagnitudeSquaredAndPhaseUnWrapped(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_PhaseWrap(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_PhaseUnWrap(long jarg1, long jarg2, int jarg3);
  public final static native double SDS_Log2(double jarg1);
  public final static native void SDA_Copy(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_CopyWithStride(long jarg1, int jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void SIF_CopyWithOverlap(long jarg1);
  public final static native int SDA_CopyWithOverlap(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void SDA_20Log10(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_10Log10(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_LogMagnitude(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_LogMagnitudeAndPhaseWrapped(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_LogMagnitudeAndPhaseUnWrapped(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_Lengthen(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SDA_Shorten(long jarg1, long jarg2, int jarg3);
  public final static native void SIF_ReSize(long jarg1);
  public final static native int SDA_ReSize(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void SDA_ReSizeInput(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native int SDA_ReSizeOutput(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_Fill(long jarg1, double jarg2, int jarg3);
  public final static native void SDA_Clear(long jarg1, int jarg2);
  public final static native void SDA_Histogram(long jarg1, long jarg2, double jarg3, double jarg4, int jarg5, int jarg6);
  public final static native void SDA_HistogramCumulative(long jarg1, long jarg2, double jarg3, double jarg4, int jarg5, int jarg6);
  public final static native void SDA_HistogramExtended(long jarg1, long jarg2, double jarg3, double jarg4, int jarg5, int jarg6);
  public final static native void SDA_HistogramExtendedCumulative(long jarg1, long jarg2, double jarg3, double jarg4, int jarg5, int jarg6);
  public final static native void SIF_Histogram(long jarg1, int jarg2);
  public final static native void SDA_HistogramEqualize(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native void SDA_Quantize(long jarg1, long jarg2, int jarg3, double jarg4, int jarg5);
  public final static native double SDS_Quantize(double jarg1, int jarg2, double jarg3);
  public final static native void SDA_Quantize_N(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDS_Quantise_N(double jarg1, double jarg2);
  public final static native void SDA_Abs(long jarg1, long jarg2, int jarg3);
  public final static native double SDS_PeakValueToBits(double jarg1, int jarg2);
  public final static native double SDS_BitsToPeakValue(double jarg1, int jarg2);
  public final static native double SDS_LinearTodBm(double jarg1, double jarg2);
  public final static native void SDA_LinearTodBm(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDS_dBmToLinear(double jarg1, double jarg2);
  public final static native void SDA_dBmToLinear(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native int SDS_Compare(double jarg1, double jarg2, double jarg3);
  public final static native int SDA_Compare(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native int SDS_CompareComplex(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native int SDA_CompareComplex(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, int jarg6);
  public final static native double SDS_Int(double jarg1);
  public final static native double SDS_Frac(double jarg1);
  public final static native double SDS_AbsFrac(double jarg1);
  public final static native void SDA_Int(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_Frac(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_AbsFrac(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_SetRange(long jarg1, long jarg2, double jarg3, double jarg4, int jarg5);
  public final static native void SDA_SetMean(long jarg1, long jarg2, double jarg3, double jarg4, int jarg5);
  public final static native void SDA_RealSpectralInverse(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_ComplexSpectralInverse(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_FdInterpolate(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void SDA_FdInterpolate2(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native double SDS_TdPitchShift(double jarg1, long jarg2, long jarg3, long jarg4, long jarg5, double jarg6, int jarg7);
  public final static native void SDA_TdPitchShift(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, double jarg7, int jarg8, int jarg9);
  public final static native double SDS_EchoGenerate(double jarg1, long jarg2, long jarg3, double jarg4, double jarg5, int jarg6, int jarg7);
  public final static native void SDA_Power(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDS_Polynomial(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native void SDA_Polynomial(long jarg1, long jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, int jarg9);
  public final static native double SDS_Modulo(double jarg1, double jarg2, int jarg3);
  public final static native void SDA_Modulo(long jarg1, long jarg2, double jarg3, int jarg4, int jarg5);
  public final static native void SDA_AgcPeak(long jarg1, long jarg2, double jarg3, double jarg4, double jarg5, double jarg6, long jarg7, long jarg8, int jarg9, int jarg10);
  public final static native void SIF_AgcMeanAbs(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, double jarg7, double jarg8, int jarg9);
  public final static native void SDA_AgcMeanAbs(long jarg1, long jarg2, double jarg3, double jarg4, double jarg5, double jarg6, long jarg7, long jarg8, long jarg9, long jarg10, int jarg11, int jarg12);
  public final static native void SIF_AgcMeanSquared(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, double jarg7, double jarg8, int jarg9);
  public final static native void SDA_AgcMeanSquared(long jarg1, long jarg2, double jarg3, double jarg4, double jarg5, double jarg6, long jarg7, long jarg8, long jarg9, long jarg10, int jarg11, int jarg12);
  public final static native void SDA_GroupDelay(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native int SDA_ZeroCrossingDetect(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native double SDS_ZeroCrossingDetect(double jarg1, long jarg2, int jarg3);
  public final static native int SDA_FirstZeroCrossingLocation(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native int SDA_ZeroCrossingCount(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native int SDA_LevelCrossingDetect(long jarg1, double jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native double SDS_LevelCrossingDetect(double jarg1, double jarg2, long jarg3, int jarg4);
  public final static native int SDA_FirstLevelCrossingLocation(long jarg1, double jarg2, long jarg3, int jarg4, int jarg5);
  public final static native int SDA_LevelCrossingCount(long jarg1, double jarg2, long jarg3, int jarg4, int jarg5);
  public final static native int SDA_Trigger(long jarg1, long jarg2, double jarg3, int jarg4, int jarg5);
  public final static native void SDA_ClearLocation(long jarg1, int jarg2, int jarg3);
  public final static native void SDA_SetLocation(long jarg1, int jarg2, double jarg3, int jarg4);
  public final static native void SDA_SortMinToMax(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_SortMaxToMin(long jarg1, long jarg2, int jarg3);
  public final static native int SDS_CountOneBits(int jarg1);
  public final static native int SDS_CountZeroBits(int jarg1);
  public final static native int SDS_CountLeadingOneBits(int jarg1);
  public final static native int SDS_CountLeadingZeroBits(int jarg1);
  public final static native void SDA_Sign(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_Swap(long jarg1, long jarg2, int jarg3);
  public final static native int SUF_ModuloIncrement(int jarg1, int jarg2, int jarg3);
  public final static native int SUF_ModuloDecrement(int jarg1, int jarg2, int jarg3);
  public final static native int SUF_IndexModuloIncrement(int jarg1, int jarg2, int jarg3);
  public final static native int SUF_IndexModuloDecrement(int jarg1, int jarg2, int jarg3);
  public final static native int SDA_Find(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native int SDA_FindValue(long jarg1, double jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void SIF_DeGlitch(long jarg1, double jarg2, long jarg3);
  public final static native double SDS_DeGlitch(double jarg1, long jarg2, int jarg3, int jarg4, double jarg5, long jarg6);
  public final static native void SDA_DeGlitch(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5, double jarg6, long jarg7, int jarg8);
  public final static native int SDA_RemoveDuplicates(long jarg1, long jarg2, int jarg3);
  public final static native int SDA_FindAllDuplicates(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native int SDA_FindFirstDuplicates(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native int SDA_FindSortAllDuplicates(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native int SDA_FindSortFirstDuplicates(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void SDA_SigLibDataToFix(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_FixToSigLibData(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_SigLibDataToImageData(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_ImageDataToSigLibData(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_SigLibDataToFix16(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_Fix16ToSigLibData(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_SigLibDataToFix32(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_Fix32ToSigLibData(long jarg1, long jarg2, int jarg3);
  public final static native int SDS_SigLibDataToQFormatInteger(double jarg1, int jarg2, int jarg3);
  public final static native double SDS_QFormatIntegerToSigLibData(int jarg1, int jarg2);
  public final static native void SDA_SigLibDataToQFormatInteger(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void SDA_QFormatIntegerToSigLibData(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SDS_Pid(double jarg1, double jarg2, double jarg3, double jarg4, long jarg5, long jarg6, long jarg7);
  public final static native void SDA_Pwm(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, int jarg6);
  public final static native double SDA_ExtractOrder(long jarg1, int jarg2, int jarg3, double jarg4, int jarg5, double jarg6, int jarg7);
  public final static native double SDA_SumLevel(long jarg1, int jarg2, int jarg3, int jarg4);
  public final static native double SDA_SumLevelWholeSpectrum(long jarg1, int jarg2, int jarg3, double jarg4, int jarg5);
  public final static native void SIF_OrderAnalysis(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, int jarg6, double jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12, int jarg13);
  public final static native double SDA_OrderAnalysis(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, double jarg6, double jarg7, int jarg8, long jarg9, double jarg10, long jarg11, long jarg12, long jarg13, long jarg14, int jarg15, long jarg16, int jarg17, int jarg18, int jarg19, double jarg20, int jarg21, double jarg22, int jarg23, int jarg24, int jarg25, int jarg26);
  public final static native double SDA_Sum(long jarg1, int jarg2);
  public final static native double SDA_AbsSum(long jarg1, int jarg2);
  public final static native double SDA_SumOfSquares(long jarg1, int jarg2);
  public final static native double SDA_Mean(long jarg1, double jarg2, int jarg3);
  public final static native double SDA_AbsMean(long jarg1, double jarg2, int jarg3);
  public final static native void SDA_SubtractMean(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDA_SampleSd(long jarg1, int jarg2);
  public final static native double SDA_PopulationSd(long jarg1, int jarg2);
  public final static native double SDA_UnbiasedVariance(long jarg1, int jarg2);
  public final static native double SDA_Median(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_LinraConstantCoeff(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_LinraRegressionCoeff(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_LinraCorrelationCoeff(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_LinraEstimateX(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDA_LinraEstimateY(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDA_LograConstantCoeff(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_LograRegressionCoeff(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_LograCorrelationCoeff(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_LograEstimateX(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDA_LograEstimateY(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDA_ExpraConstantCoeff(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_ExpraRegressionCoeff(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_ExpraCorrelationCoeff(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_ExpraEstimateX(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDA_ExpraEstimateY(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDA_PowraConstantCoeff(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_PowraRegressionCoeff(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_PowraCorrelationCoeff(long jarg1, long jarg2, int jarg3);
  public final static native double SDA_PowraEstimateX(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native double SDA_PowraEstimateY(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native void SDA_Detrend(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_ExtractTrend(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_Sin(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_Cos(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_Tan(long jarg1, long jarg2, int jarg3);
  public final static native void SIF_FastSin(long jarg1, int jarg2);
  public final static native void SDA_FastSin(long jarg1, long jarg2, long jarg3, double jarg4, int jarg5, int jarg6);
  public final static native double SDS_FastSin(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native void SIF_FastCos(long jarg1, int jarg2);
  public final static native void SDA_FastCos(long jarg1, long jarg2, long jarg3, double jarg4, int jarg5, int jarg6);
  public final static native double SDS_FastCos(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native void SIF_FastSinCos(long jarg1, int jarg2);
  public final static native void SDA_FastSinCos(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, int jarg6, int jarg7);
  public final static native void SDS_FastSinCos(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, int jarg6);
  public final static native void SIF_QuickSin(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_QuickSin(long jarg1, long jarg2, long jarg3, double jarg4, int jarg5);
  public final static native double SDS_QuickSin(double jarg1, long jarg2, double jarg3);
  public final static native void SIF_QuickCos(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_QuickCos(long jarg1, long jarg2, long jarg3, double jarg4, int jarg5);
  public final static native double SDS_QuickCos(double jarg1, long jarg2, double jarg3);
  public final static native void SIF_QuickSinCos(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_QuickSinCos(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, int jarg6, int jarg7);
  public final static native void SDS_QuickSinCos(double jarg1, long jarg2, long jarg3, long jarg4, double jarg5, int jarg6);
  public final static native void SIF_QuickTan(long jarg1, long jarg2, int jarg3);
  public final static native void SDA_QuickTan(long jarg1, long jarg2, long jarg3, double jarg4, int jarg5);
  public final static native double SDS_QuickTan(double jarg1, long jarg2, double jarg3);
  public final static native void SDA_Sinc(long jarg1, long jarg2, int jarg3);
  public final static native double SDS_Sinc(double jarg1);
  public final static native void SIF_QuickSinc(long jarg1, long jarg2, double jarg3, int jarg4);
  public final static native void SDA_QuickSinc(long jarg1, long jarg2, long jarg3, double jarg4, int jarg5);
  public final static native double SDS_QuickSinc(double jarg1, long jarg2, double jarg3);
  public final static native long SCV_Polar(double jarg1, double jarg2);
  public final static native long SCV_Rectangular(double jarg1, double jarg2);
  public final static native long SCV_PolarToRectangular(long jarg1, SLComplexPolar_s jarg1_);
  public final static native long SCV_RectangularToPolar(long jarg1, SLComplexRect_s jarg1_);
  public final static native long SCV_Sqrt(long jarg1, SLComplexRect_s jarg1_);
  public final static native long SCV_Inverse(long jarg1, SLComplexRect_s jarg1_);
  public final static native long SCV_Conjugate(long jarg1, SLComplexRect_s jarg1_);
  public final static native double SCV_Magnitude(long jarg1, SLComplexRect_s jarg1_);
  public final static native double SCV_MagnitudeSquared(long jarg1, SLComplexRect_s jarg1_);
  public final static native double SCV_Phase(long jarg1, SLComplexRect_s jarg1_);
  public final static native long SCV_Multiply(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_);
  public final static native long SCV_Divide(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_);
  public final static native long SCV_Add(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_);
  public final static native long SCV_Subtract(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_);
  public final static native long SCV_Log(long jarg1, SLComplexRect_s jarg1_);
  public final static native long SCV_Exp(long jarg1, SLComplexRect_s jarg1_);
  public final static native long SCV_Expj(double jarg1);
  public final static native long SCV_Pow(long jarg1, SLComplexRect_s jarg1_, double jarg2);
  public final static native long SCV_VectorAddScalar(long jarg1, SLComplexRect_s jarg1_, double jarg2);
  public final static native long SCV_VectorSubtractScalar(long jarg1, SLComplexRect_s jarg1_, double jarg2);
  public final static native long SCV_VectorMultiplyScalar(long jarg1, SLComplexRect_s jarg1_, double jarg2);
  public final static native long SCV_VectorDivideScalar(long jarg1, SLComplexRect_s jarg1_, double jarg2);
  public final static native long SCV_ScalarSubtractVector(double jarg1, long jarg2, SLComplexRect_s jarg2_);
  public final static native void SCV_Roots(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, long jarg4, SLComplexRect_s jarg4_, long jarg5, SLComplexRect_s jarg5_);
  public final static native long SCV_Copy(long jarg1, SLComplexRect_s jarg1_);
  public final static native int SCV_Compare(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_);
  public final static native void SDA_CreateComplexRect(long jarg1, long jarg2, long jarg3, SLComplexRect_s jarg3_, int jarg4);
  public final static native void SDA_CreateComplexPolar(long jarg1, long jarg2, long jarg3, SLComplexPolar_s jarg3_, int jarg4);
  public final static native void SDA_ExtractComplexRect(long jarg1, SLComplexRect_s jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_ExtractComplexPolar(long jarg1, SLComplexPolar_s jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void SDA_ClearComplexRect(long jarg1, SLComplexRect_s jarg1_, int jarg2);
  public final static native void SDA_ClearComplexPolar(long jarg1, SLComplexPolar_s jarg1_, int jarg2);
  public final static native void SDA_FillComplexRect(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, int jarg3);
  public final static native void SDA_FillComplexPolar(long jarg1, SLComplexPolar_s jarg1_, long jarg2, SLComplexPolar_s jarg2_, int jarg3);
  public final static native void SDA_ComplexRectangularToPolar(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexPolar_s jarg2_, int jarg3);
  public final static native void SDA_ComplexPolarToRectangular(long jarg1, SLComplexPolar_s jarg1_, long jarg2, SLComplexRect_s jarg2_, int jarg3);
  public final static native void SDA_RectangularToPolar(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_PolarToRectangular(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDA_ComplexSqrt(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, int jarg3);
  public final static native void SDA_ComplexInverse(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, int jarg3);
  public final static native void SDA_ComplexConjugate(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, int jarg3);
  public final static native void SDA_ComplexMagnitude(long jarg1, SLComplexRect_s jarg1_, long jarg2, int jarg3);
  public final static native void SDA_ComplexMagnitudeSquared(long jarg1, SLComplexRect_s jarg1_, long jarg2, int jarg3);
  public final static native void SDA_ComplexPhase(long jarg1, SLComplexRect_s jarg1_, long jarg2, int jarg3);
  public final static native void SDA_ComplexMultiply(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, int jarg4);
  public final static native void SDA_ComplexDivide(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, int jarg4);
  public final static native void SDA_ComplexAdd(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, int jarg4);
  public final static native void SDA_ComplexSubtract(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, int jarg4);
  public final static native void SDA_ComplexLog(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, int jarg3);
  public final static native void SDA_ComplexExp(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, int jarg3);
  public final static native void SDA_ComplexExpj(long jarg1, long jarg2, SLComplexRect_s jarg2_, int jarg3);
  public final static native void SDA_ComplexPow(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, double jarg3, int jarg4);
  public final static native void SDA_ComplexVectorAddScalar(long jarg1, SLComplexRect_s jarg1_, double jarg2, long jarg3, SLComplexRect_s jarg3_, int jarg4);
  public final static native void SDA_ComplexVectorSubtractScalar(long jarg1, SLComplexRect_s jarg1_, double jarg2, long jarg3, SLComplexRect_s jarg3_, int jarg4);
  public final static native void SDA_ComplexVectorMultiplyScalar(long jarg1, SLComplexRect_s jarg1_, double jarg2, long jarg3, SLComplexRect_s jarg3_, int jarg4);
  public final static native void SDA_ComplexVectorDivideScalar(long jarg1, SLComplexRect_s jarg1_, double jarg2, long jarg3, SLComplexRect_s jarg3_, int jarg4);
  public final static native void SDA_ComplexScalarSubtractVector(double jarg1, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, int jarg4);
  public final static native void SDA_ComplexRectangularLinearInterpolate(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_, long jarg3, SLComplexRect_s jarg3_, int jarg4);
  public final static native void SDA_ComplexPolarLinearInterpolate(long jarg1, SLComplexPolar_s jarg1_, long jarg2, SLComplexPolar_s jarg2_, long jarg3, SLComplexPolar_s jarg3_, int jarg4);
  public final static native void SMX_Transpose(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SMX_Multiply(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void SMX_CreateIdentity(long jarg1, int jarg2);
  public final static native int SMX_Inverse2x2(long jarg1, long jarg2);
  public final static native int SMX_ComplexInverse2x2(long jarg1, SLComplexRect_s jarg1_, long jarg2, SLComplexRect_s jarg2_);
  public final static native int SMX_Inverse(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native int SMX_LuDecompose(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SMX_LuSolve(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native double SMX_Determinant(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native double SMX_LuDeterminant(long jarg1, long jarg2, int jarg3);
  public final static native void SMX_RotateClockwise(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SMX_RotateAntiClockwise(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SMX_Reflect(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SMX_Flip(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SMX_InsertRow(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void SMX_ExtractRow(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void SMX_InsertColumn(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void SMX_ExtractColumn(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void SMX_InsertNewRow(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void SMX_DeleteOldRow(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void SMX_InsertNewColumn(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void SMX_DeleteOldColumn(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void SMX_InsertRegion(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8, int jarg9);
  public final static native void SMX_ExtractRegion(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void SMX_InsertDiagonal(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void SMX_ExtractDiagonal(long jarg1, long jarg2, int jarg3);
  public final static native void SMX_SwapRows(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void SMX_SwapColumns(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void SMX_Sum(long jarg1, long jarg2, int jarg3, int jarg4);
}
