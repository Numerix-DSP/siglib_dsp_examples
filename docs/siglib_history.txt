SigLib (Tm) Revision Update History File
========================================


VERSION : 8.63
RELEASE DATE : xx-xx-xxxx
_________________________

Additional Processor / Compiler Support :
    None

Additional Functionality :
    SDA_LinearMicrophoneArrayBeamPatternLinear and SDA_MicrophoneArrayBeamPatternLinear
    SDA_Multiplex and SDA_Demultiplex
    SDA_Mux6, SDA_Demux6, SDA_Mux7, SDA_Demux7, SDA_Mux8 and SDA_Demux8
    SDA_FirstMinVertex, SDA_FirstMinVertexPos, SDA_FirstMaxVertex, SDA_FirstMaxVertexPos
    SUF_FrequenciesToOctaves, SUF_FrequenciesToCentreFreqHz, SUF_FrequenciesToQFactor,
    SUF_BandwidthToQFactor and SUF_QFactorToBandwidth
    SDS_Nearest, SDS_Clip, SDS_Threshold, SDS_SoftThreshold, SDS_ThresholdAndClamp, SDS_Clamp, SDS_SetMinValue
    SDA_InterpolateArbitraryThreePointQuadraticPeakVertexMagnitude and SDA_InterpolateArbitraryThreePointQuadraticPeakVertexLocation

Bug Fixes :
    SDA_Quantize_N
    Tidied up limit cases for atan2 function : e.g. SDS_Phase

Operational Changes :
    Microsoft secure fopen_s used with MSVC
    SIGLIB_10LOG10_MIN replaced with SIGLIB_DB_MIN
    SDA_InterpolateArbitraryThreePointQuadraticVertexMagnitude and SDA_InterpolateArbitraryThreePointQuadraticVertexLocation - Tidied up array limits tests
    32 bit Linux binary support deprecated. Binaries can still be built from source code.

Optimisation Changes :
    SDA_PeakToAverageRatio, SDA_PeakToAveragePowerRatio, SDA_PeakToAveragePowerRatioDB, SDA_PeakToAverageRatioComplex
    SDA_PeakToAveragePowerRatioComplex and SDA_PeakToAveragePowerRatioComplexDB

Notes :
    Complete analysis and tidy up using clang-tidy


VERSION : 8.62
RELEASE DATE : 08/07/2018
_________________________

Additional Processor / Compiler Support :
    None

Additional Functionality :
    SDS_InterpolateThreePointQuadraticVertexMagnitude, SDS_InterpolateThreePointQuadraticVertexLocation, SDS_InterpolateArbitraryThreePointQuadraticVertexMagnitude and
    SDS_InterpolateArbitraryThreePointQuadraticVertexLocation
    SDA_InterpolateThreePointQuadraticVertexMagnitude, SDA_InterpolateThreePointQuadraticVertexLocation, SDA_InterpolateArbitraryThreePointQuadraticVertexMagnitude and
    SDA_InterpolateArbitraryThreePointQuadraticVertexLocation

Bug Fixes :
    None

Operational Changes :
    SDS_EnvelopeHilbert and SDA_EnvelopeHilbert tidied up

Optimisation Changes :
    None

Notes :
    None


VERSION : 8.61
RELEASE DATE : 19/03/2018
_________________________

Additional Processor / Compiler Support :
    Android

Additional Functionality :
    None

Bug Fixes :
    None

Operational Changes :
    Tidied up use of -Wmaybe-uninitialized
    Function name cleanup
        SIF_IirNotchFilter changed to SIF_IirNotchFilter2

        SIF_LowPassFirFilter changed to SIF_FirLowPassFilter
        SIF_HighPassFirFilter changed to SIF_FirHighPassFilter
        SIF_BandPassFirFilter changed to SIF_FirBandPassFilter
        SIF_LowPassFirFilterWindow changed to SIF_FirLowPassFilterWindow
        SIF_HighPassFirFilterWindow changed to SIF_FirHighPassFilterWindow
        SIF_BandPassFirFilterWindow changed to SIF_FirBandPassFilterWindow
        SUF_KaiserApproximation changed to SUF_FirKaiserApproximation
        SIF_MatchedFirFilter to SIF_FirMatchedFilter

        SIF_OrderNIir changed to SIF_IirOrder
        SDS_OrderNIir changed to SDS_IirOrder
        SDA_OrderNIir changed to SDA_IirOrder
        SIF_NcIir changed to SIF_IirNc
        SDA_NcIir changed to SDA_IirNc

        SDA_ModifyIirFilterGain changed to SDA_IirModifyFilterGain
        SIF_LowPassIirFilter changed to SIF_IirLowPassFilter
        SIF_HighPassIirFilter changed to SIF_IirHighPassFilter
        SIF_AllPassIirFilter changed to SIF_IirAllPassFilter
        SIF_BandPassIirFilter changed to SIF_IirBandPassFilter
        SIF_NotchIirFilter changed to SIF_IirNotchFilter
        SIF_PeakingIirFilter changed to SIF_IirPeakingFilter
        SIF_LowShelfIirFilter changed to SIF_IirLowShelfFilter
        SIF_HighShelfIirFilter changed to SIF_IirHighShelfFilter

        SDS_RemoveDC changed to SDS_IirRemoveDC
        SDA_RemoveDC changed to SDA_IirRemoveDC

        SDS_TimeConstantToOnePoleFilterCoeff changed to SDS_OnePoleTimeConstantToFilterCoeff
        SDS_CutOffFrequencyToOnePoleFilterCoeff changed to SDS_OnePoleCutOffFrequencyToFilterCoeff

        SIF_ArbFft to SIF_FftArb
        SUF_ArbFftAllocLength to SUF_FftArbAllocLength
        SDA_ArbRfft to SDA_RfftArb
        SDA_ArbCfft to SDA_CfftArb
        SDA_ArbCifft to SDA_CifftArb

Optimisation Changes :
    None

Notes :
    None


VERSION : 8.60
RELEASE DATE : 07.01.2018
_________________________

Additional Processor / Compiler Support :
    None

Additional Functionality :
    SDA_RemoveDuplicates, SDA_FindAllDuplicates, SDA_FindFirstDuplicates, SDA_FindSortAllDuplicates, SDA_FindSortFirstDuplicates.
    SDA_SignedAbsMax, SDA_SignedAbsMin.
    SDA_ConvolveLinearComplex, SDA_ConvolvePartialComplex, SDA_ConvolveCircularComplex
    Envelope Detector Examples moved to library :
        SIF_Envelope, SDS_Envelope and SDA_Envelope
        SIF_EnvelopeRMS, SDS_EnvelopeRMS and SDA_EnvelopeRMS
        SIF_EnvelopeHilbert, SDS_EnvelopeHilbert and SDA_EnvelopeHilbert
    SDA_IirNegateAlphaCoeffs
    SDS_IirMac, SDA_IirMac - Use MAC rather than MSUB instructions - MSUB is not supported in all processor architectures
    SDS_FirComplex
    SDS_TimeConstantToOnePoleFilterCoeff, SDS_CutOffFrequencyToOnePoleFilterCoeff
    SDA_LinearTodBm and SDA_dBmToLinear
    SDS_Quantize, SDA_Quantize_N, SDS_Quantize_N
    SDA_LinearMicrophoneArrayBeamPattern, SDA_MicrophoneArrayCalculateDelays and SDA_MicrophoneArrayBeamPattern
    SIF_FirWithStore, SDS_FirWithStore, SDA_FirWithStore
    SIF_FirComplexWithStore, SDS_FirComplexWithStore, SDA_FirComplexWithStore
    SDS_FirWithStoreAddSample, SDA_FirWithStoreAddSamples
    SIF_FirExtendedArray, SDS_FirExtendedArray, SDA_FirExtendedArray
    SIF_FirComplexExtendedArray, SDS_FirComplexExtendedArray, SDA_FirComplexExtendedArray
    SDS_FirExtendedArrayAddSample, SDA_FirExtendedArrayAddSamples
    SIF_FirPolyPhaseGenerate
    SIM_Max, SIM_Min
    SDA_Align
    SDA_CorrelateLinearReturnPeak
    SDA_SigLibDataToImageData, SDA_ImageDataToSigLibData
    SDA_FftExtend, SDA_CfftExtend

Bug Fixes :
    SIF_TableTopWindow - fix for odd length windows
    Fixes for odd length FIR filter design coefficient indices :
        SIF_LowPassFirFilter, SIF_HighPassFirFilter, SIF_BandPassFirFilter
        SIF_LowPassFirFilterWindow, SIF_HighPassFirFilterWindow, SIF_BandPassFirFilterWindow

Operational Changes :
    Added more Portaudio / Analog I/O examples
        const declaration tidy up
    All Sinc and ResampleSinc functions tidied up
    DLL examples tidied up
    limits.h support improved
    gcc support improved
    QPSK examples tidied up
    Header filenames extended :
        siglibc.h  -> siglib_constants.h
        siglibd.h  -> siglib_types.h
        siglibic.h -> siglib_iir_constants.h
        siglibm.h  -> siglib_macros.h
        siglibms.h -> siglib_memory_sections.h
        siglibp.h  -> siglib_processors.h
    siglib_processors.h now uses stdint.h where supported by compiler
    correlat.c filename changed to correlate.c
    SDA_CorrelateLinear and SDA_CorrelateLinearPartial tidied up
    sconio.h renamed to siglib_host_utils.h and time.h functions added.

Optimisation Changes :
    SDS_AbsMax changed to remove macros

Notes :
    None


VERSION : 8.53
RELEASE DATE : 30.12.2014
_________________________

Additional Processor / Compiler Support :
    MACOS X

Additional Functionality :
    Added SDS_QFormatIntegerToSigLibData and SDS_SigLibDataToQFormatInteger
    Added SDA_QFormatIntegerToSigLibData and SDA_SigLibDataToQFormatInteger
    SIGLIB_DATA_WORD_LENGTH and SIGLIB_ARRAY_INDEX_WORD_LENGTH macros added to verify the wordlengths

Bug Fixes :
    SDA_CostasQamDemodulate and SDA_CostasQamDemodulateDebug - decode logic bug fixed

Operational Changes :
    SDS_EchoGenerate modified to remove some compiler warnings
    siglib.c modifications to printing angles for compatibility with more compilers
    SDS_Compare and SDS_CompareComplex - removed unused parameters
    SDA_ZoomFft and SDA_ZoomFftSimple - modified to remove some compiler warnings

Optimisation Changes :
    None

Notes :
    None


VERSION : 8.52
RELEASE DATE : 18.01.2014
_________________________

Additional Processor / Compiler Support :
    XMOS XS1
    64 bit Intel X64 support (Visual Studio 2010) - siglib64.lib

Additional Functionality :
    Python support via SWIG

Bug Fixes :
    None

Operational Changes :
    Examples tidied up and Gnuplot/C support added.
        SIM_Median3x3 modified to remove compiler warnings

Optimisation Changes :
    SDA_ComplexShift - code tidy up and optimization

Notes :
    None


VERSION : 8.51
RELEASE DATE : 1.9.2012
_______________________

Additional Processor / Compiler Support :
    Microsoft Visual Studio 10.0

Additional Functionality :
    SUF_StrError
    SLAccData_t added for future functionality
    SUF_DebugPrintInfo, SUF_DebugPrintLine and SUF_DebugPrintTime
    SDA_HistogramCumulative, SDA_HistogramExtended, SDA_HistogramExtendedCumulative
    SDS_Compare and SDS_CompareComplex

Bug Fixes :
    SDS_SignalGenerateGaussianNoise and SDA_SignalGenerateGaussianNoise parameter errors fixed.
    SIF_FftConvolvePre, SDA_FftConvolvePre and SDA_FftConvolveArb
    SIF_FftCorrelatePre, SDA_FftCorrelatePre and SDA_FftCorrelateArb
    SDA_Histogram offset scaling problems
    SDA_ZoomFft error in I/Q path processing

Operational Changes :
    SDA_Histogram change to data range limit handling
    SDA_SigLibDataToFix, SDA_SigLibDataToFix32 and SDA_SigLibDataToFix16 use SDS_RoundToNearest to avoid floating point to fixed point issues.
    The following constant declarations have changed :
        SIGLIB_DATA_VERY_SMALL to SIGLIB_MIN
        SIGLIB_10LOG10_OF_DATA_VERY_SMALL to SIGLIB_10LOG10_MIN
        SIGLIB_AI_... to SIGLIB_FIX_....
        SIGLIB_AI_MAX to SIGLIB_FIX_MAX
        SIGLIB_AI_WORD_LENGTH to SIGLIB_FIX_WORD_LENGTH
        SIGLIB_DATA_CLOSE_TO_ZERO to SIGLIB_MIN_THRESHOLD

Optimisation Changes :
    None

Notes :
    None



VERSION : 8.50
RELEASE DATE : 13.12.2010
_________________________

Additional Processor / Compiler Support :
  None

Additional Functionality :
    SIF_BandPassFirFilterWindow, SIF_LowPassFirFilterWindow and SIF_HighPassFirFilterWindow
    C# example updated to support Microsoft C# 2008
    SIF_GoertzelDetect, SIF_GoertzelDetectComplex
    SUF_EstimateBPFilterLength
    SDA_Max2, SDA_AbsMax2, SDA_Min2, SDA_AbsMin2
    SIF_Resonator1
    SDS_Int, SDS_Frac, SDS_AbsFrac, SDA_Int, SDA_Frac, SDA_AbsFrac
    SDA_SetRange, SDA_SetMean
    SUF_MSDelay
    SIF_DeGlitch, SDS_DeGlitch, SDA_DeGlitch
    SUF_EstimateBPFilterLength and SUF_EstimateBPFilterError
    SDS_GoertzelFilter
    SUF_IndexModuloIncrement and SUF_IndexModuloDeccrement

Bug Fixes :
    SDA_ReSizeOutput - pointer update bug fixed
    SDA_TdPitchShift - pDst pointer update bug fixed
    SDA_Resonator, SDA_Resonator1 and SDA_Resonator1Add - Removed pDst pointer update bug introduced in V8.40

Operational Changes :
    SIF_GoertzelFilterComplex function name changed to SIF_GoertzelDetectComplex
    SIF_Delay function name changed to SIF_FixedDelay
    SDS_Delay function name changed to SDS_FixedDelay
    SDA_Delay function name changed to SDA_FixedDelay
    SIF_DelayComplex function name changed to SIF_FixedDelayComplex
    SDS_DelayComplex function name changed to SDS_FixedDelayComplex
    SDA_DelayComplex function name changed to SDA_FixedDelayComplex
    SDA_ShortDelay function name changed to SDA_ShortFixedDelay
    SIF_FifoDelay function name changed to SIF_VariableDelay
    SDS_FifoDelay function name changed to SDS_VariableDelay
    SDA_FifoDelay function name changed to SDA_VariableDelay
    SIF_FifoDelayComplex function name changed to SIF_VariableDelayComplex
    SDS_FifoDelayComplex function name changed to SDS_VariableDelayComplex
    SDA_FifoDelayComplex function name changed to SDA_VariableDelayComplex
    SUF_IncreaseFifoDelay function name changed to SUF_IncreaseVariableDelay
    SUF_DecreaseFifoDelay function name changed to SUF_DecreaseVariableDelay
    Function parameters and internal data types in the following functions have been modified to allow correct handling of mixing short and long integer types.
        SMX_Inverse and SMX_LuDecompose
        SDA_QpskModulate, SDA_Qam16Modulate, SDA_Qam16Demodulate, SDA_Qam16DemodulateDebug
        SDA_DpskModulate, SDA_DpskDemodulateDebug, SDA_BpskDemodulate, SDA_BpskDemodulateDebug
        SDA_ComplexQPSKSpread, SDA_ComplexQPSKDeSpread, SDA_PiByFourDQpskModulate, SIF_ComplexShift
        SDA_MovePeakTowardsDeadBand, SDA_ZoomFft
        SDA_Interpolate, SDA_FilterAndDecimate, SDA_InterpolateAndFilter, SDA_ResampleLinear
        SIF_VariableDelay, SIF_VariableDelayComplex
        SDA_SignalGenerate, SDS_SignalGenerate
        SIF_ViterbiDecoderV32 and SDS_ViterbiDecoderV32


Optimisation Changes :
    SDA_GoertzelDetect and SDA_GoertzelDetectComplex - Note function parameter lists have changed.
    SIF_DtmfDetect, SDA_DtmfDetect and SDA_DtmfDetectAndValidate - Note function parameter lists have changed.
    SDA_Resonator, SDA_Resonator1 and SDA_Resonator1Add - use local variables for state arrays.
    SIGLIB_TRIANGLE and SIGLIB_BARTLETT window types now split into :
        SIGLIB_BARTLETT_TRIANGLE_ZERO_END_POINTS and SIGLIB_BARTLETT_TRIANGLE_NON_ZERO_END_POINTS

Notes :
    None


VERSION : 8.42
RELEASE DATE : 26.6.2009
________________________

Additional Processor / Compiler Support :

Additional Functionality :
    Cft and Cift functions added
    SUF_PrintArray, SUF_PrintComplexArray, SUF_PrintMatrix, SUF_PrintPolar, SUF_PrintRectangular, SUF_PrintIIRCoefficients, SUF_DebugPrintComplexArray
    SIF_TappedDelayLine, SDS_TappedDelayLine, SDA_TappedDelayLine, SIF_TappedDelayLineComplex,
        SDS_TappedDelayLineComplex, SDA_TappedDelayLineComplex, SIF_TappedDelayLineIQ, SDS_TappedDelayLineIQ,
        SDA_TappedDelayLineIQ
    SDA_ZeroCrossingCount, SDA_LevelCrossingDetect, SDS_LevelCrossingDetect, SDA_FirstLevelCrossingLocation, SDA_LevelCrossingCount
    SDS_10Log10, SDS_20Log10
    SDS_ZTransform, SDS_ZTransformDB
    SDA_PeakToAveragePowerRatio, SDA_PeakToAveragePowerRatioDB, SDA_PeakToAverageRatioComplex, SDA_PeakToAveragePowerRatioComplex, SDA_PeakToAveragePowerRatioComplexDB.

Bug Fixes :
    None

Operational Changes :
    Scaling on dft function
    SDA_FirstZeroCrossingPos changed to SDA_FirstZeroCrossingLocation
    SIGLIB_POSITIVE_ZERO_CROSS changed to SIGLIB_POSITIVE_LEVEL_CROSS
    SIGLIB_NEGATIVE_ZERO_CROSS changed to SIGLIB_NEGATIVE_LEVEL_CROSS
    SIGLIB_ALL_ZERO_CROSS changed to SIGLIB_ALL_LEVEL_CROSS
    SLZeroCrossingMode_t changed to SLLevelCrossingMode_t
    SIGLIB_ZERO_CROSSING_NOT_DETECTED changed to SIGLIB_LEVEL_CROSSING_NOT_DETECTED

Optimisation Changes :
    Dft functions optimized

Notes :
    None


VERSION : 8.41
RELEASE DATE : 1.5.2009
_______________________

Additional Processor / Compiler Support :

Additional Functionality :
    None

Bug Fixes :
    SDA_Median - corrected for even array lengths

Operational Changes :
    None

Optimisation Changes :
    None

Notes :
    None


VERSION : 8.40
RELEASE DATE : 1.4.2009
_______________________

Additional Processor / Compiler Support :

Additional Functionality :
    SDS_SignalGenerate
    Macros - SDA_SignalGenerateWhiteNoise, SDS_SignalGenerateWhiteNoise,
        SDA_SignalGenerateGaussianNoise, SDS_SignalGenerateGaussianNoise.
        SDA_SignalGeneratePolarWhiteNoise, SDS_SignalGeneratePolarWhiteNoise,
        SDA_SignalGeneratePolarGaussianNoise and SDS_SignalGeneratePolarGaussianNoise.
    SDS_ScramblerDescramblergCRC24, SDS_SequenceGeneratorgCRC24, SDS_ScramblerDescramblergCRC16,
    SDS_SequenceGeneratorgCRC16, SDS_ScramblerDescramblergCRC12, SDS_SequenceGeneratorgCRC12,
    SDS_ScramblerDescramblergCRC8 , SDS_SequenceGeneratorgCRC8
    SDS_ChannelizationCode
    SDA_ComplexSqrt, SDA_ComplexInverse, SDA_ComplexConjugate, SDA_ComplexMagnitude,
    SDA_ComplexMagnitudeSquared, SDA_ComplexPhase, SDA_ComplexMultiply, SDA_ComplexDivide,
    SDA_ComplexAdd, SDA_ComplexSubtract, SDA_ComplexLog, SDA_ComplexExp, SDA_ComplexExpj, SDA_ComplexPow,
    SDA_ComplexVectorAddScalar, SDA_ComplexVectorSubtractScalar, SDA_ComplexVectorMultiplyScalar,
    SDA_ComplexVectorDivideScalar, SDA_ComplexScalarSubtractVector.
    SDS_LongCodeGenerator3GPPDL, SDS_LongCodeGenerator3GPPUL.
    SDA_ComplexQPSKSpread, SDA_ComplexQPSKDeSpread.
    SDA_SignalAddPolarJitterAndGaussianNoise, SDS_SignalAddPolarJitterAndGaussianNoise
    SCV_Copy, SCV_Compare, SCV_CopyMacro
    SDS_ReverseDiBits
    SDS_QpskBitErrorCount, SDS_BitErrorRate
    SIF_Iir2PoleLpf, SDS_Iir2Pole, SDA_Iir2Pole
    SDA_ComplexRectangularLinearInterpolate, SDA_ComplexPolarLinearInterpolate

Bug Fixes :
    None

Operational Changes :
    SCV_RectangularToPolar, SDA_ComplexRectangularToPolar and SDA_RectangularToPolar changes to origin handling.
    The following functions have been modified to remove static variables :
        SIF_QpskModulate, SDA_QpskModulate, SIF_QpskDemodulate, SDA_QpskDemodulate
        SDA_QpskDemodulateDebug, SIF_Qam16Modulate, SDA_Qam16Modulate
        SIF_Qam16Demodulate, SDA_Qam16Demodulate, SDA_Qam16DemodulateDebug
        SIF_PiByFourDQpskModulate, SDA_PiByFourDQpskModulate

Optimisation Changes :
    None

Notes :
    None


VERSION : 8.30
RELEASE DATE : 1.1.2009
_______________________

Additional Processor / Compiler Support :

Additional Functionality :
    SDA_SignalGenerateKronekerDeltaFunction macro
    SDA_Find and SDA_FindValue

Bug Fixes :
    None

Operational Changes :
    #if (SIGLIB_ARRAY_OR_PTR == SIGLIB_POINTER_ACCESS) modifications for some functions using array accesses.
    SDA_WelchRealPowerSpectrum and SDA_WelchComplexPowerSpectrum modified to generate linear results rather than dB.

Optimisation Changes :
    None

Notes :
    None

VERSION : 8.20
RELEASE DATE : Pre-release June 2008
_______________________

Additional Processor / Compiler Support :
	Microsoft Visual C++ 2008 Express Edition

Additional Functionality :
	SDA_Range
	SDS_ScramblerDescramblerPN9, SDS_ScramblerDescramblerPN15, SDS_SequenceGeneratorPN9 and SDS_SequenceGeneratorPN15
	SDS_ErrorVector, SDS_ErrorVectorMagnitudePercent and SDS_ErrorVectorMagnitudeDecibels
	SDA_Compare and SDA_CompareComplex

Bug Fixes :
	SDA_ReSizeOutput - pState array access bug fixed when using SIGLIB_ARRAY_ACCESS.

Operational Changes :
	SDA_10log10 changed to SDA_10Log10 and SDA_20log10 changed to SDA_20Log10 to fit in with
	standard naming convention.

Optimisation Changes :
	None

Notes :
	All examples re-written to support Signal Visualizer (http://signalvisualize.sourceforege.net)
	16 bit DOS compiler (Borland and Microsoft) support deprecated


VERSION : 8.10
RELEASE DATE : Pre-release June 2007
_______________________

Additional Processor / Compiler Support :
	IAR Embedded Workbench and ARM architecture

Additional Functionality :
	SDA_ComplexRectangularToPolar and SDA_ComplexPolarToRectangular
	SUF_DebugPrintCount
	SUF_AmCarrierArrayAllocate, SIF_AmplitudeModulate, SDS_AmplitudeModulate
	SIF_AmplitudeModulate2, SDA_AmplitudeModulate2 and SDS_AmplitudeModulate2
	SDA_FastSin, SDS_FastSin, SDA_FastCos, SDS_FastCos, SDA_FastSinCos and SDS_FastSinCos
	SIF_DetectNumericalWordSequence, SDS_DetectNumericalWordSequence, SIF_DetectNumericalBitSequence,
	SDS_DetectNumericalBitSequence, SIF_DetectCharacterSequence and SDS_DetectCharacterSequence
	SIF_ConvCoefficients3x3
	SIF_AgcMeanAbs, SDA_AgcMeanAbs, SIF_AgcMeanSquared, SDA_AgcMeanSquared.
	SDA_RealRealCepstrum, SDA_RealComplexCepstrum and SDA_ComplexComplexCepstrum
	SDA_PhaseUnWrapped, SDA_MagnitudeAndPhaseWrapped, SDA_MagnitudeSquaredAndPhaseWrapped,
	SDA_MagnitudeAndPhaseUnWrapped, SDA_MagnitudeSquaredAndPhaseUnWrapped,
	SDA_LogMagnitudeAndPhaseWrapped and SDA_LogMagnitudeAndPhaseUnWrapped
	SDA_ResampleLinear, SDA_LinearInterpolate1 and SDA_LinearInterpolate2
	SIF_QuickSin, SDA_QuickSin, SDS_QuickSin, SIF_QuickCos, SDA_QuickCos, SDS_QuickCos
	SIF_QuickSinCos, SDA_QuickSinCos, SDS_QuickSinCos, SIF_QuickTan, SDA_QuickTan, SDS_QuickTan
	SDA_Sinc and SDS_Sinc
	SIF_QuickSinc, SDA_QuickSinc and SDS_QuickSinc
	SIF_ResampleSinc, SIF_ResampleWindowedSinc and SDA_ResampleSinc
	SIF_InterpolateSinc1, SIF_InterpolateWindowedSinc1 and SDA_InterpolateSinc1
	SIF_ResampleLinearContiguous and SDA_ResampleLinearContiguous
	SIF_ResampleSincContiguous, SIF_ResampleWindowedSincContiguous and SDA_ResampleSincContiguous
	SIF_ReSize, SDA_ReSize, SDA_ReSizeInput and SDA_ReSizeOutput
	SIF_TableTopWindow
	SIF_FftTone and SDA_RfftTone
	SDS_RoundDown, SDS_RoundUp, SDS_RoundToNearest
	SAI_RoundDown, SAI_RoundUp, SAI_RoundToNearest
	SAI_Odd, SAI_Even, SAI_PowerOfTwo, SAI_Absolute, SAI_Sign, SAI_Log2
	SUF_BinNumberToFrequency, SUF_BinNumberToFrequency2, SUF_FrequencyToBinNumber and SUF_FrequencyToBinNumber2
	SDA_LocalMax, SDA_LocalAbsMax, SDA_LocalMin and SDA_LocalAbsMin
	SIF_FdAnalytic and SDA_FdAnalytic
	SIF_FrequencyModulate, SIF_FrequencyModulateComplex, SDS_FrequencyModulateComplex, SDA_FrequencyModulateComplex
	SDS_ScramblerDescramblerPN9, SDS_ScramblerDescramblerPN15, SDS_SequenceGeneratorPN9 and SDS_SequenceGeneratorPN15.
	SDS_BitMask macro added.
	SDS_ComplexMultiply, SDS_ComplexInverse, SDS_ComplexDivide.
	SMX_Inverse2x2, SMX_ComplexInverse2x2
	SDA_SortMaxToMin
	SDA_FirFilterInverseCoherentGain
	SDA_ExtractOrder, SDA_SumLevel, SDA_SumLevelWholeSpectrum, SIF_OrderAnalysis, SDA_OrderAnalysis

Bug Fixes :
	SDA_Abs - Array indexing bug fixed in SIGLIB_ARRAY_ACCESS mode.

Operational Changes :
	SDA_RectangularToPolar and SDA_PolarToRectangular moved from dsputils.c to complexa.c
	SDA_AmplitudeModulate - Modified to support carrier table with an integer number of cycles
	SDS_FastSinCos - Array length parameter now specifies sinusoid period
	SDA_Agc1 and SDA_Agc2 deprecated.
	SDA_Agc3 changed to SDA_AgcPeak.
	The following functions no longer return a value (i.e. they are type void). The underlying
		functionality has not changed. : SIF_Fft, SIF_ArbFft, SIF_Czt, SIF_Fft2d,
		SIF_FastAutoCrossPowerSpectrum, SIF_ArbAutoCrossPowerSpectrum and
		SIF_MagnitudeSquaredCoherence
	SDA_Phase changed to SDA_PhaseWrapped
	SDA_PhaseUnwrap to SDA_PhaseUnWrap
	SIF_FastTan has been deprecated, please use SIF_QuickTan instead
	SDA_CorrelateCircular recoded to prevent compilation warnings with certain compilers
	SUF_NumberOfElements changed to SAI_NumberOfElements
	SCV_Inverse2 and SCV_Divide2 functions deprecated use SCV_Inverse and SCV_Divide instead.
	SDA_Sort has been deprecated, use SDA_SortMinToMax instead.

Optimisation Changes :
	The Costas loop functions have been optimized to improve perfomance and the following
	functions have been effected
	SIF_CostasLoop, SDS_CostasLoop, SDA_CostasLoop, SRF_CostasLoop,
	SIF_CostasQamDemodulate, SDS_CostasQamDemodulate, SDS_CostasQamDemodulateDebug, 	SDA_CostasQamDemodulate, SDA_CostasQamDemodulateDebug,
	SIF_BpskDemodulate, SDS_BpskDemodulate, SDA_BpskDemodulate
	SIF_DpskDemodulate, SDS_DpskDemodulate, SDA_DpskDemodulate
	You should now use SUF_CostasLoopArrayAllocate() to malloc the look-up-table memory, rather
	than SUF_VectorArrayAllocate().
	SCV_Inverse and SCV_Divide functions optimized

Notes :
	None


VERSION : 8.01
RELEASE DATE : 02-08-06
_______________________

Additional Processor / Compiler Support :
	Java - Via SWIG API
	Linux shared object file support
	C# - Via SWIG API
	Perl - Via SWIG API
	Keil MicroVision toolset - tested with the ARM7 architecture

Additional Functionality :
	SIF_PiByFourDQpskModulate and SDA_PiByFourDQpskModulate
	SIF_IirNotchFilter
	SDA_IirZplanePolarToCoeffs
	SIF_IirNormalizedCoefficients
	OrderNIir filter function - coefficients reordered and denominator coefficients negated
to align with IIR biquad functions.
	SDA_MovePeakTowardsDeadBand
	SDS_CountZeroBits, SDS_CountLeadingOneBits, SDS_CountLeadingZeroBits
	SDS_Combinations, SDS_Permutations
	SUF_DebugPrintPolar, SUF_DebugPrintRectangular and SUF_DebugPrintIIRCoefficients
	SDS_DegreesToRadians, SDA_DegreesToRadians, SDS_RadiansToDegrees and SDA_RadiansToDegrees
	SDA_ClearComplexRect, SDA_ClearComplexPolar, SDA_FillComplexRect and SDA_FillComplexPolar
	SDA_TranslateSPlaneCutOffFrequency
	SDA_ComplexScalarDivide and SDA_ComplexScalarMultiply

Bug Fixes :
	None

Operational Changes :
	Corelate.c changed to correlat.c - we can never quite get away from the 8.3 file format :-(
	SDS_Roots now returns SIGILB_DOMAIN_ERROR if the parameters will not lead to real factors.
	SDA_CmplxSpectralInverse changed to SDA_ComplexSpectralInverse
	SDA_ComplexDivide function renamed to SDA_ComplexDivide2
	SDA_Divide, SDA_Multiply and SDA_Offset, SMX_ScalarMultiply - parameter order changed

Optimisation Changes :
	SDA_MagnitudeSquaredCoherence optimised for performance

Notes :
	None


VERSION : 8.00
RELEASE DATE : 19-03-06
_______________________

Additional Processor / Compiler Support :
	None

Additional Functionality :
	SDA_Fix16ToSigLibData, SDA_SigLibDataToFix16, SDA_Fix32ToSigLibData and SDA_SigLibDataToFix32
	SDA_ThresholdAndClamp
	SDA_Comb
	SIF_HighPassFirFilter
	SIF_TriggerReverberator, SDA_TriggerReverberator, SDS_TriggerReverberator, SDA_TriggerSelector
	SDS_ZeroCrossingDetect
	SIF_MatchedFirFilter
	SIF_FifoDelayComplex, SDS_FifoDelayComplex, SDA_FifoDelayComplex
	SIF_DelayComplex, SDS_DelayComplex, SDA_DelayComplex
	SUF_AsyncCharacterLength, SDA_SyncToAsyncConverter, SDA_AsyncToSyncConverter, SIF_AsyncAddRemoveStopBits, SDA_AsyncRemoveStopBits, SDA_AsyncAddStopBits
	SDA_DecreaseWordLength, SDA_IncreaseWordLength
	SIF_EarlyLateGate, SDA_EarlyLateGate, SDA_EarlyLateGateDebug, SDS_EarlyLateGate
	SIF_EarlyLateGateSquarePulse, SDA_EarlyLateGateSquarePulse, SDA_EarlyLateGateSquarePulseDebug, SDS_EarlyLateGateSquarePulse
	SDS_OnePoleNormalized and SDA_OnePoleNormalized
	SIF_CostasQamDemodulate, SDS_CostasQamDemodulate, SDS_CostasQamDemodulateDebug, SDA_CostasQamDemodulate, SDA_CostasQamDemodulateDebug

Bug Fixes :
	None

Operational Changes :
	SDS_Fabs has been deprecated - use SDS_Abs instead
	SigLib data types have been expanded to provide more flexibility. Please refer to the SigLib reference guide for more details.
		SFLOAT changed to SLData_t / SLImageData_t
		SFIX changed to SLFixData_t / SLArrayIndex_t / SLError_t
		char changed to SLChar_t
		Image data changed to SLImageData_t
	SIGLIB_SFIX_MAX changed to SIGLIB_FIX_MAX
	SIGLIB_SFIX_WORD_LENGTH changed to SIGLIB_FIX_WORD_LENGTH
	SIGLIB_SFLOAT_CLOSE_TO_ZERO changed to SIGLIB_DATA_CLOSE_TO_ZERO
	SIGLIB_SFLOAT_VERY_SMALL changed to SIGLIB_DATA_VERY_SMALL
	SIGLIB_10LOG10_OF_SFLOAT_VERY_SMALL changed to SIGLIB_10LOG10_OF_DATA_VERY_SMALL
	SIGLIB_SFLOAT_MAX changed to SIGLIB_DATA_MAX
	SIGLIB_INV_SFLOAT_MAX changed to SIGLIB_INV_DATA_MAX
	SIGLIB_NULL_SFLOAT_PTR to SIGLIB_NULL_DATA_PTR
	SIGLIB_NULL_SFIX_PTR to SIGLIB_NULL_FIX_DATA_PTR
	SDA_Clip - clip mode is an enumerated type (ClipMode_t) - this does not change the way the function is used.
	All structures and enumerated types prefixed with SL e.g. ComplexRect_s becomes SLComplexRect_s and Window_t becomes SLWindow_t.
	SDA_FloatToFix renamed to SDA_SigLibDataToFix and SDA_FixToFloat renamed to SDA_FixToSigLibData.
	SDS_Comb - The parameter order has been modified to match SDA_Comb
	SDA_ClearHistogram changed to SIF_Histogram
	SIF_FifoDelay now initialises the variable FIFO delay parameter
	All delay functions now moved to delay.c
	SDA_Delay name change to SDA_ShortDelay
	New SDA_Delay now compatible with SDS_Delay operation
	SDS_PhaseLockedLoop, SDA_PhaseLockedLoop, SDS_CostasLoop and SDA_CostasLoop now output in-phase detected carrier
	SDS_CostasLoop and SDA_CostasLoop now support additional feedback modes
	SDS_OnePole and SDA_OnePole do not normalize the step response gain. Use SDS_OnePoleNormalized and SDA_OnePoleNormalized instead.
	SDA_SigGenRamp now called SDA_SignalGenerateRamp and parameters simplified.
	SDA_SigGenImpulse now called SDA_SignalGenerateImpulse and parameters simplified.

Optimisation Changes :
	SIF_DtmfGenerate, SDA_DtmfGenerate, SDA_GoertzelFilter, SDA_GoertzelDetect and SDA_GoertzelDetectComplex optimised for performance
	SIF_Fft2d and SIM_Fft2d optimised + parameters modified
	SDA_FirstZeroCrossingPos now returns -1 when no zero crossings have been detected in the source array.
	SDA_TestAbsOverThreshold and SDA_TestAbsOverThreshold return :
		The index of the first sample over the threshold value
		-1 if no samples are greater than the threshold value
	SDA_Differentiate modified to work in-place.
	SDS_Comb code modified for performance
	SIF_CostasLoop now returns error code

Notes :
	This version was released as Early Availability pending further development and testing.


VERSION : 7.00
RELEASE DATE : 22-10-05
_______________________

Additional Processor / Compiler Support :
	Support for Ch C/C++ interpreter
	Extended support for LSI Logic ZSP architectures
	Modifications to allow the library to compile correctly with different versions of the GNU compiler. These are due to conflicts with the 'register' keyword.

Additional Functionality :
	SDA_SetMinValue
	SDA_Deconvolution
	SDA_ComplexDivide
	SDS_ManchesterEncode, SDS_ManchesterDecode, SDS_ManchesterEncodeByte and SDS_ManchesterDecodeByte
	SUF_ModuloIncrement and SUF_ModuloDecrement
	SIF_Delay
	SIF_FifoDelay, SDS_FifoDelay, SDA_FifoDelay, SUF_IncreaseFifoDelay, SUF_DecreaseFifoDelay
	SUF_Debugfprintf, SUF_Debug_vfprintf, SUF_DebugPrintArray and SUF_DebugPrintMatrix
	SMX_RotateClockwise, SMX_RotateAntiClockwise, SMX_Reflect, SMX_Flip, SMX_InsertRow, SMX_ExtractRow
	SMX_InsertColumn, SMX_ExtractColumn, SMX_InsertNewRow, SMX_DeleteOldRow, SMX_InsertNewColumn
	SMX_DeleteOldColumn, SMX_InsertRegion, SMX_ExtractRegion, SMX_InsertDiagonal, SMX_ExtractDiagonal
	SMX_SwapRows, SMX_SwapColumns, SMX_Sum
	SIF_Decimate, SDA_Decimate, SIF_Interpolate, SDA_Interpolate, SIF_FilterAndDecimate, SDA_FilterAndDecimate, SIF_InterpolateAndFilter, SDA_InterpolateAndFilter
	SIF_OverlapAndAddLinear, SDA_OverlapAndAddLinear, SDA_OverlapAndAddLinearWithClip, SDA_OverlapAndAddArbitrary and SDA_OverlapAndAddArbitraryWithClip
	SIF_180DegreePhaseDetect, SDA_180DegreePhaseDetect
	SIF_CopyWithOverlap and SFIX SDA_CopyWithOverlap
	SDA_FirAddSamples
	SDA_PositiveOffset, SDA_NegativeOffset
	SIF_WelchPowerSpectrum, SDA_WelchRealPowerSpectrum and SDA_WelchComplexPowerSpectrum
	SDA_Square, SDA_Sqrt
	SIF_MagnitudeSquaredCoherence, SDA_MagnitudeSquaredCoherence
	SDA_PeakToAverageRatio
	SIF_PreEmphasisFilter, SDA_PreEmphasisFilter, SIF_DeEmphasisFilter and SDA_DeEmphasisFilter
	SDA_AdpcmEncoder, SDA_AdpcmEncoderDebug and SDA_AdpcmDecoder
	SIF_OnePole
	SIF_LeakyIntegrator, SDS_LeakyIntegrator1 and SDS_LeakyIntegrator2
	SDS_Square and SDS_Asinh macros added

Bug Fixes :
	None

Operational Changes :
	SIF_BlockDelay and SIF_SampleDelay functions replaced with SIF_Delay
	Siglibfi.h and siglibfd.h have been deprecated. See the SigLib User's Guide for more details about how to use SigLib in limited memory applications using the splitfile utility
	Modification in how huge keyword is managed to tidy up code in image.c and siglib.h
	SIF_ComplexShift returns error code from the SDA_SignalGenerate function that it calls
	SIF_ZoomFft returns the error code from the SIF_Fft() and SIF_ComplexShift() functions that it calls
	SIF_ZoomFft and SDA_ZoomFft functions modified to include an FIR filter stage to improve signal resolution
	Original SIF_ZoomFft and SDA_ZoomFft function names changed to SIF_ZoomFftSimple and SDA_ZoomFftSimple
	SIF_Fir, SIF_Comb, SIF_Delay, SIF_ComplexFir and SIF_Lms now initialise filter index

Optimisation Changes :
	SMX_Transpose modified to support in-place square matrices, which are faster than not-in-place
THE FOLLOWING FUNCTIONS HAVE BEEN OPTIMISED TO REMOVE INTERNAL DIVISION OPERATIONS - THIS IMPROVES RUNTIME PERFORMANCE
	SIF_FastAutoCrossPowerSpectrum, SDA_FastAutoPowerSpectrum, SDA_FastCrossPowerSpectrum, SIF_ArbAutoCrossPowerSpectrum, SDA_ArbAutoPowerSpectrum and SDA_ArbCrossPowerSpectrum optimised to remove internal division operations and only save required (N/2)+1 output samples.
	SDA_DtmfGenerate - The magnitude of the output signal from this function is now twice the size of the previous function.
	SIF_FirOverlapAdd, SDA_FirOverlapAdd, SIF_FirOverlapSave, SDA_FirOverlapSave.
	SDA_FdHilbert.
	SDA_Rft and SDA_Rift.
	SDA_Qam16Demodulate and SDA_Qam16DemodulateDebug.
	SDA_Mean and SDA_SubtractMean.
	SIF_ArbFft, SDA_ArbRfft and SDA_ArbCfft.
	SDA_PeakToAverageRatio
	SDA_MeanSquareError
	SDA_Covariance and SDA_CovariancePartial

Notes :
	None


VERSION : 6.63
RELEASE DATE : 22-01-05
_______________________

Additional Processor / Compiler Support :
	None

Additional Functionality :
	SDA_FirstZeroCrossingPos function added
	SDA_SignalGenerate now generates D.C. constant levels - same functionality as SDA_Fill
	SDA_Trigger function added
	SDA_SubtractMean function added
	SIGLIB_POSITIVE and SIGLIB_NEGATIVE declared
	SDS_PeakValueToBits, SDS_BitsToPeakValue, SDS_LinearTodBm, SDS_dBmToLinear functions added

Bug Fixes :
	None

Operational Changes :
	lib/dll folder name changed to lib/MSVC because it now contains static and dynamic link libraries.
	lib/ARMV4WinCEdll folder name changed to ARMV4WinCE and contents rearranged
	SDS_Sign modified to remove warnings with certain compilers
	SDA_DtmfGenerate modified to scale gain of resonators to limit peak signal strength
	SDA_Resonator, SDA_Resonator1 and SDA_Resonator1Add optimised for performance, SIF_Resonator also modified.
	SDA_DtmfDetectAndValidate and SDA_DtmfDetect modified to make detection more reliable

Optimisation Changes :
	SDA_ZeroCrossingDetect optimised for performance

Notes :
	For details on how to recompile the DLL examples for use with static libraries please refer to the User's Guide.


VERSION : 6.62
RELEASE DATE : 08-01-05
_______________________

Additional Processor / Compiler Support :
	None

Additional Functionality :
	SDA_SignalGenerate now supports randomization function under Windows Mobile 2003
	SigLib DLL for PocketPC now supplied with prebuilt Debug and Release versions
	siglibp.h functionality added to support further mixing of static and dynamic link libraries

Bug Fixes :
	None

Operational Changes :
	None

Optimisation Changes :
	None

Notes :
	None


VERSION : 6.61
RELEASE DATE : 01-01-05
_______________________

Additional Processor / Compiler Support :
	None

Additional Functionality :
	SIGLIB_NULL definition added - this is primarily used to identify unused function parameters.
	Flat top window added to SIF_Window

Bug Fixes :
	None

Operational Changes :
	None

Optimisation Changes :
	None

Notes :
	None


VERSION : 6.60
RELEASE DATE : 06-12-04
_______________________

Additional Processor / Compiler Support :
	WindowsCE / PocketPC Microsoft Embedded Visual C++ V4.00
	Open Watcom support added - see notes in /siglib/lib/watcom.

Additional Functionality :
	SIGLIB_SFLOAT_IS_DOUBLE, SIGLIB_SFLOAT_IS_FLOAT, SIGLIB_SFIX_IS_SHORT.

Bug Fixes :
	None

Operational Changes :
	Moved SIGLIB_SFIX_IS_LONG to siglibm.h
	SDA_SignalGenerate uses clock function for greater portability.

Optimisation Changes :
	None

Notes :
	Example programs tidied up to improve portability.


VERSION : 6.50
RELEASE DATE : 26-06-04
_______________________

Additional Processor / Compiler Support :
	None

Additional Functionality :
	SIF_BpskModulate, SDA_BpskModulate, SDA_BpskModulateByte
	SIF_BpskDemodulate, SDA_BpskDemodulate, SDA_BpskDemodulateBaudDebug
	SIF_DpskModulate, SDA_DpskModulate, SDA_DpskModulateByte
	SIF_DpskDemodulate, SDA_DpskDemodulate
	SDA_Average, SDA_Add, SDA_Subtract

Bug Fixes :
	None

Operational Changes :
	The following function names have changed to fit with the standard SigLib naming convention :
		SDA_FskModulate to SDA_FskModulateByte
		SDA_FskDemodulate to SDA_FskDemodulateByte
		SDA_CpfskModulate to SDA_CpfskModulateByte
		SDA_FskModulateBit to SDA_FskModulate
		SDA_FskDemodulateBit to SDA_FskDemodulate
		SDA_CpfskModulateBit to SDA_CpfskModulate

Optimisation Changes :
	None

Notes :


VERSION : 6.42
RELEASE DATE : 06-04-04
_______________________

Additional Processor / Compiler Support :
	None

Additional Functionality :
	pspect.c added, including the following functions :
		SIF_FastAutoCrossPowerSpectrum, SDA_FastAutoPowerSpectrum, SDA_FastCrossPowerSpectrum
		SIF_ArbAutoCrossPowerSpectrum, SDA_ArbAutoPowerSpectrum, SDA_ArbCrossPowerSpectrum
	SDA_AbsSum

Bug Fixes :
	None

Operational Changes :
	SDA_QPSKDifferentialEncode and SDA_QPSKDifferentialDecode changed to SDA_QpskDifferentialEncode and SDA_QpskDifferentialDecode to fit standard naming convention.

Optimisation Changes :
	None

Notes :


VERSION : 6.41
RELEASE DATE : 02-04-04
_______________________

Additional Processor / Compiler Support :
	None

Additional Functionality :
	None

Bug Fixes :
	None

Operational Changes :
	SIF_BandPassFirFilter modified to add additional parameter for bandwidth.

Optimisation Changes :
	None

Notes :


VERSION : 6.40
RELEASE DATE : 25-01-04
_______________________

Additional Processor / Compiler Support :
	None

Additional Functionality :
	SDA_Agc3
	PortAudio examples added
	Additional DLL examples and compilation notes added
	SIGLIB_NULL_COMPLEX_RECT_PTR and SIGLIB_NULL_COMPLEX_POLAR_PTR
	SUF_ComplexRectArrayAllocate and SUF_ComplexPolarArrayAllocate
	SIF_AllPole, SDS_AllPole and SDA_AllPole
	SDA_MatchedZTransform
	SIF_OrderNIir, SDS_OrderNIir, SDA_OrderNIir
	SDA_IirLpLpShift and SDA_SDA_IirLpHpShift
	SDS_Roots and SCV_Roots
	SDS_Factorial
	GNUPlot interface added to examples
	SIF_Window now supports symmetrical and periodic windows through #define
	SCV_Expj (e^jTheta)
	SUF_KaiserApproximation

Bug Fixes :
	SDA_IirZplaneToCoeffs - poles were negated

Operational Changes :
	SDS_Iir and SDA_Iir tidied up.
	SDA_Agc2 tidied up and additional parameter added to improve stability
	'DOSExamples' directory changed to 'Examples'
	SCV_RectangularToPolar - Now checks for value close to zero at PI/2
	Various functions modified to remove code of the form "value == SFLOAT_ZERO" to handle rounding errors.

Optimisation Changes :

Notes :


VERSION : 6.20
RELEASE DATE : 04-10-03
________________________

Additional Processor / Compiler Support :
	Analog Devices TigerSHARC

Additional Functionality :
	SDA_ZDomainCoefficientReorg - reorganises z-domain coefficients from Digital Filter Plus
	SDS_PreWarp - pre-warps frequencies for bilinear transform
	SDA_MagnitudeSquared, SDS_Magnitude and SDS_MagnitudeSquared
	SDA_PhaseWrap
	SUF_Debugfprintf
	SDS_I0Bessel

Bug Fixes :
	SDA_ArbCifft was not declared in header files
	SDA_PhaseUnwrap indexing was incorrect
	SIF_Window - Kaiser window
	SDA_DtmfDetectAndValidate pointer dereferencing was incorrect

Operational Changes :
	SDS_OnePole, SDA_OnePole and SDA_OnePolePerSample moved to iirfilt.c
	SDA_RmsPower has been deprecated and is now called SDA_Magnitude
	SUF_IirState_arrayAllocate changed to SUF_IirStateArrayAllocate
	SDA_LogMagnitude added functionality to support limits for calculating logs
	SIF_Fft - modified because earlier implementation caused non-linearities in large FFTs,
		when using certain compilers.
	SCV_Abs and SCV_AbsSquared changed to SCV_Magnitude and SCV_MagnitudeSquared
	SDA_BilinearTransform now returns 'void'

Optimisation Changes :
	None

Notes :


VERSION : 6.10A
RELEASE DATE : 06-03-03
________________________

Documentation updated to cover SDA_CreateComplexRect, SDA_CreateComplexPolar, SDA_ExtractComplexRect and SDA_ExtractComplexPolar functions.


VERSION : 6.10
RELEASE DATE : 01-10-02
________________________

Additional Processor / Compiler Support :
	LSI Logic ZSP

Additional Functionality :
	SDA_Difference and SDA_SumOfDifferences
	SDS_PowerOfTwo - checks to see if the number is a power of 2
	SDS_RemoveDC and SDA_RemoveDC
	SDA_CreateComplexRect, SDA_CreateComplexPolar, SDA_ExtractComplexRect and SDA_ExtractComplexPolar
	SUF_ComplexRectArrayAllocate and SUF_ComplexPolarArrayAllocate.
	SIF_QpskModulate and SDA_QpskModulate completely re-written
	SIF_QpskDemodulate, SDA_QpskDemodulate, SDA_QpskDemodulateDebug, SDA_QPSKDifferentialEncode and SDA_QPSKDifferentialDecode.
	SDA_CorrelatePartial
	SDA_CovariancePartial

Bug Fixes :
	SDA_CorrelateLinear - Fixed indexing bug in first overlap
	Example program mrate.c - *pInput pointer increment modified
	SIF_Window - increment of theta changed to correct slight asymmetry of response
	SDA_WindowInverseCoherentGain gain calculation modified.
	SDA_ConvolveCircular - Last result in output array was incorrect
	SDA_ConvolvePartial
	SDA_CorrelateLinear and SDA_Covariance offsets

Operational Changes :
	New API. The new API uses a simpler function naming convention. All source files can be modified by the use of the "slnewapi.bat" file in the \SigLib\utils directory. SigLib can still be accessed through the TI DAIS programming API using the header file siglib_610_numerix.h.
	siglibp.h allows for processor specific definitions without conflict with the default GNU compiler definitions.
	SIF_QpskModulate and SDA_QpskModulate have been deprecated.
	SIF_Qam16Modulate and SIF_Qam16Demodulate now type void.
	SDA_CorrelateLinear and SDA_Covariance it is no longer necessary to specify which is the longest/shortest arrays
	SDA_CorrelateLinear this function now zero pads at both ends so the output offset has shifted.

Optimisation Changes :
	SIF_ArbFft and SUF_ArbFftAllocLength use function SDS_PowerOfTwo
	SDA_ConvolveLinear, SDA_ConvolveCircular and SDA_ConvolvePartial simplified to improve performance

Notes :
	DFilter has been deprecated from SigLib. This functionality has been replaced by DFPlus, which runs under Windows and Linux. For further details, please see http://www.numerix-dsp.com/dfplus.



VERSION : 6.00
RELEASE DATE : 02-06-01
________________________

Additional Processor / Compiler Support :
	Diab Data compiler now supported

Additional Functionality :
	siglib_numerix_SIFLowPassFirFilter
	siglib_numerix_SDSFrequencyModulate
	siglib_numerix_SIFCostasLoop, siglib_numerix_SDSCostasLoop and siglib_numerix_SDACostasLoop
	siglib_numerix_SIFPhaseLockedLoop, siglib_numerix_SDSPhaseLockedLoop and siglib_numerix_SDAPhaseLockedLoop
	siglib_numerix_SIFFastSin, siglib_numerix_SIFFastCos, siglib_numerix_SIFFastSinCos and siglib_numerix_SIFFastTan
	siglib_numerix_SDATdPitchShift - please see Operational Changes section below
	siglib_numerix_SUFArbFftAllocLength
	siglib_numerix_SDSConvEncoderK3, siglib_numerix_SIFViterbiDecoderK3, siglib_numerix_SDSViterbiDecoderK3
	siglib_numerix_SDSConvEncoderV32, siglib_numerix_SIFViterbiDecoderV32, siglib_numerix_SDSViterbiDecoderV32
	siglib_numerix_SDSEuclideanDistance, siglib_numerix_SDSEuclideanDistanceSquared
	siglib_numerix_SDAArbCifft


Bug Fixes :
	TWO_PI in siglibp.h (C62x section) replaced with SIGLIB_TWO_PI
	pBitReverseAddressTable manipulation modified in ffourier.c when FAST mode not used, to avoid problems with certain compilers.
	siglib_numerix_SDAComplexMultiply2 now works in place
	siglib_numerix_SIFVl now correctly works with wider range of I/O lengths
	siglib_numerix_SDADtmfDetectAndValidate - validation process made more robust

Operational Changes :
	siglib_numerix_SDSFrequencyModulate and siglib_numerix_SDAFrequencyModulate optimised performance using fast sine look up tables
	siglib_numerix_SDATdPitchShift renamed to siglib_numerix_SDSTdPitchShift, to fit standard SigLib naming conventions
	siglib_numerix_SDAQpskModulate and siglib_numerix_SDAQpskModulate2 now process a byte of information at a time.


Optimisation Changes :
	None

Notes :
	Please refer to the SigLib User's Guide (users.pdf)



VERSION : 5.00
RELEASE DATE : 07-01-00
________________________

Additional Processor Support :

Additional Functionality :
	Support for Texas Instruments' eXpress DSP Algorithm Integration Standard added. The primary changes to the API are that all function names and globals are preceeded by the string "siglib_numerix_" and the "_" character is not allowed in the remainder of the function name. For further details, please refer to the SigLib User's Guide.
	siglib_numerix_SDAResonator1Add function added
	siglib_numerix_SDADeltaModulate2 function added

Bug Fixes :

Operational Changes :
	siglib_numerix_SUFKeyCodeToAscii and siglib_numerix_SUFAsciiToKeyCode now return SIGLIB_NO_DTMF_KEY on error.
	Fourier.c has been split into ffourier.c, arbfft.c and fourier.c.
	Filter.c has been split into firfilt.c, iirfilt.c and filter.c.
	-Wall command line option removed from linux makefile because this caused warnings in code that was inserted to stop warnings in other compilers.

Optimisation Changes :
	siglib_numerix_SDADtmfGenerate optimised to improve performance
	siglib_numerix_SDAResonator1 optimised to improve performance and reduce code size

Notes :



VERSION : 4.03
RELEASE DATE : 13-08-00
________________________

Additional Processor Support :

Additional Functionality :
	SDA_dtmf_detect_and_validate, SDA_test_over_threshold, SDA_test_abs_over_threshold and SCV_abs_squared functions added

Bug Fixes :

Operational Changes :
	Sldll.h removed, DLL now accessed through siglib.lib and dllimport / export mode selected through command line switch to siglibp.h - C++ examples updated to reflect this change.
	SDA_dtmf_detect - optimised for use with 8KHz sample rate and 102 sample buffer length.
	Constant SIGLIB_RESONATOR_DELAY_SIZE changed to SIGLIB_RESONATOR_DELAY_LENGTH
	SIGLIB_DTMF_CODE_ERROR changed to SIGLIB_NO_DTMF_KEY

Optimisation Changes :

Notes :
	This version only released as a DLL.



VERSION : 4.02
RELEASE DATE : 20-07-00
________________________

Additional Processor Support :

Additional Functionality :
	SIF_goertzel_detect_complex and SDA_goertzel_detect_complex functions added.

Bug Fixes :
	SDA_goertzel_detect now returns true square magnitude energy. SIF_goertzel_detect also modified to fit this change.

Operational Changes :

Optimisation Changes :

Notes :
	This version only released as a DLL.



VERSION : 4.01
RELEASE DATE : 13-06-00
________________________

Additional Processor Support :

Additional Functionality :
	SDA_interleave and SDA_deinterleave functions added - these are used for rearranging sample ordering on channels with bursty noise.
	SIF_fast_bit_reverse_reorder function added.
	SDA_weighted_sum - Weighted vector sum function added
	SIF_band_pass_fir_filter function added.
	SDA_fsk_modulate_bit, SDA_fsk_demodulate_bit, SDA_cpfsk_modulate_bit functions added.

Bug Fixes :

Operational Changes :
	SDA_bit_reverse_reorder modified to support fast mode.
	SIF_fft pointer error fixed in fast bit reverse initialisation.
	SDA_cpfsk_demodulate function removed, obsolete - please use SDA_fsk_demodulate
	SDA_fsk_demodulate changed, now includes enhanced filtering.

Optimisation Changes :

Notes :
	This version only released as a DLL.


VERSION : 4.00
RELEASE DATE : 12-02-00
________________________

Additional Processor Support :
	ADSP-2116x
	SigLib Sharc support now for visual DSP.

Additional Functionality :
	SUF_halt
	DSP Examples directory added
	Standard math library functions (e.g. sin()) now accessed through macros e.g. SDS_sin for portability.
	SIF_fir_overlap_add, SDA_fir_overlap_add, SIF_fir_overlap_save and SDA_fir_overlap_save functions added.
	SIF_gaussian_filter2 function added - allows specification of filter bandwidth.
	SDA_bit_error_rate,  SIF_qam16_modulate, SDA_qam16_modulate, SIF_qam16_demodulate, SDA_qam16_demodulate, SDA_qam16_demodulate_debug, SDA_qam16_differential_encode and SDA_qam16_differential_decode
	SDS_scrambler_14_17, SDS_descrambler_14_17, SDS_scrambler_14_17_with_inversion,
	SDS_descrambler_14_17_with_inversion, SDS_scrambler_18_23,
	SDS_descrambler_18_23, SDS_scrambler_5_23 and SDS_descrambler_5_23 functions added.
	SIF_fsk_modulate, SDA_fsk_modulate, SDA_fsk_demodulate, SDA_cpfsk_modulate and
	SDA_cpfsk_demodulate

Bug Fixes :
	SDA_detrend and SDA_extract_trend : RampPtr made static.

Operational Changes :
	C67x data format changed to float from double for greater optimisation.
	Constant data values replaced by defined constants in SigLib.h (prefixed by SL_CONST_)
	Rationalisation of the number of batch files for rebuilding the library
	ADSP21020 support removed because this is no longer available in the V4.00 ADI compiler
	SHARC compilation and archiver batch files replaced with Visual DSP project file (SigLib.dpj).
	SDA_frequency_demodulate made more flexible
	Files minmax.c and smath.c added.
	Redundant code removed from SDA_fd_interpolate
	SIF_raised_cosine_filter and SIF_root_raised_cosine_filter functions optimised.
	SCV_exponential changed to SCV_exp
	The following functions have been removed : SIF_pwm, SIF_median. These are now obsolete.
	All constants now begin with the string "SIGLIB_"
	SDA_max, SDA_min, SDA_max_pos and SDA_min_pos modified to avoid problems with certain compilers.
	The enumerated types win_type and sig_type have been changed to window_type and signal_type
	modulate.c split into mod-a.c (analog modulation) and mod-d.c (digital modulation)
	Graphics and I/O functionality removed to Numerix Host Library (NHL)
	SigLib constant values now held in siglibc.h
	SigLib processor definitions now held in siglibp.h
	All SigLib functionality can now be included or removed using the header file siglibfi.h

Optimisation Changes :
	SDA_peak_hold_per_sample
	SDA_frequency_demodulate

Notes :
	SigLib documentation now provided in Acrobat 4.0 format

Functions modified to support re-entrancy :
	SIF_fft, SDA_rfft, SDA_cfft, SDA_cifft, SIF_zoom_fft, SDA_zoom_fft
	SIF_fd_hilbert, SDA_fd_hilbert
	SIF_arb_fft, SDA_arb_rfft, SDA_arb_cfft
	SIF_fir_overlap_add, SDA_fir_overlap_add, SIF_fir_overlap_save, SDA_fir_overlap_save
	SIF_czt
	SIF_nc_iir, SDA_nc_iir
	SDA_delay
	SDA_normalized_lms_update
	SIM_fft2d, SIF_fft2d
	SDA_resonator1
	SIF_complex_shift, SDA_complex_shift
	SDS_pid, SDA_pwm
	SDA_median, SDA_detrend, SDA_extract_trend
	SMX_inverse, SMX_lu_decompose, SMX_determinant
	SDS_echo_generate
	SDA_td_pitch_shift


VERSION : 3.02
RELEASE DATE : 15-05-99
________________________

Additional Processor Support :

Additional Functionality :
	SIF_gaussian_filter function added to full library.
	SIF_raised_cosine_filter and SIF_root_raised_cosine_filter
	functions added.
	SIF_complex_fir and SDA_complex_fir functions added.
	SDA_inverse function added.
	SCV_phase function added.
	SDS_phase function added.
	SIF_qpsk_modulate, SDA_qpsk_modulate, SIF_qpsk_modulate2 and
	SDA_qpsk_modulate2 functions added.
	SDS_odd, SDS_even and SUF_number_of_elements macros added.
	Telecomm.c added, containing : SIF_dtmf_generate, SDA_dtmf_generate,
	SIF_dtmf_detect, SDA_dtmf_detect, SUF_ascii_to_key_code and
	SUF_key_code_to_ascii
	SDA_sum_of_squares function added.

Bug Fixes :
	DFilter bilinear transform IIR filter design functionality now fixed.

Operational Changes :
	SDA_goertzel_detect modified to reset filter state array on
	each iteration and final stage optimised.
	_SL_HOST_ENABLED replaced with _SL_TEXTIO_ENABLED,
	_SL_GRAPHICSIO_ENABLED and _SL_FILEIO_ENABLED.

Optimisation Changes :

Notes :



VERSION : 3.01
RELEASE DATE : 20-03-99
________________________

Additional Processor Support :

Additional Functionality :
	SIF_gaussian_filter function added to DLL

Bug Fixes :

Operational Changes :

Optimisation Changes :

Notes :
	This version was only released as a DLL.


VERSION : 3.00
RELEASE DATE : 14-03-99
________________________

Additional Processor Support :

Additional Functionality :
	SDA_select_max, SDA_select_min, SDA_select_magnitude_squared_max and
		SDA_select_magnitude_squared_min functions added.
	Macros SUF_memory_allocate and SUF_memory_free used for malloc and free
		aid portability to different operating environments

Bug Fixes :

Operational Changes :
	New API implemented, please refer to the "New API Reference Manual" for
	more details.
	SIF_median, SIF_complex_shift and SIF_fft2d - memory allocation
		changed to better support reallocation.
	htof and ftoh replaced by SDA_fix_to_float and SDA_float_to_fix
	sample_one_pole mapped to SDA_one_pole and buffer_one_pole mapped to
		SDA_one_pole_per_sample to fit new API

Optimisation Changes :
	SDA_one_pole_per_sample changed to improve optimisation, number of
		parameters changed



VERSION : 2.52
RELEASE DATE : 22-02-99
________________________

Additional Processor Support :

Additional Functionality :
	buffer_soft_threshold function added.
	Linux support added (see Users.doc).
	u2d and d2u (UNIX <> DOS) file converters added.
	Poly-phase filter coefficient converters added.

Bug Fixes :
	Buffer_rotate did not rotate all samples, documentation also changed.
	Siglib.h end of comment '/' character added.
	Fourier.c FAST_SIGLIB_FFT changed to SL_FAST_BIT_REVERSAL

Operational Changes :
	sig_gen_ramp and sig_gen_impulse modified, so that global variable sl_Dummy is not required
	siglib.h undefines 'PI' before defining it, so as to avoid conflicts.
	%le changed to %e in print statements to avoid compiler warnings on some compilers
	Console I/O functions that only use standard ASCII I/O have been
	moved to dspconio.c so that they can be used on a wider range of
	operating systems without the graphics functionality.

Optimisation Changes :
	rfft, cfft and cifft functions optimised


VERSION : 2.51
RELEASE DATE : 22-11-98
________________________

Additional Processor Support :

Additional Functionality :
	leaky_lms_update, normalized_lms_update, sign_error_lms_update,
	sign_data_lms_update, and sign_sign_lms_update functions added.
	buffer_bit_reverse_reorder, index_bit_reverse_reorder functions added.
	FFT functions now have optional bit reversal enabled / disabled.
	Bit reversal now has optional fast (look up table) mode.
	Additional declarations for UNIX environments in SigLib.h and Sun
		Workstation makefile added.

Bug Fixes :

Operational Changes :
	siggen.c - randomization constant explicitly defined for all processors.
	siglib.h - host graphics constant explicitly defined for all processors.
	buffer_peak_hold made re-entrant. You are advised to clear the contents
		of the peak hold buffer to zero prior to using this function.
	Macro BUFFER_OPERATE changed to buffer_operate for compatibility reasons
		however BUFFER_OPERATE still functions in the current version.
	The documentation for the host and graphics functions has been removed
		from Ref.pdf and is now located in HostRef.pdf
	C6700 declarations in siglib.h
	The memory allocation / reallocation process has been changed to
		remove the requirement to pre-allocate the largest array required,
		this effects the following functions : pwm_init, matrix_inverse,
		matrix_lu_decompose, matrix_determinant, buffer_detrend,
		buffer_extract_trend, fft_init, czt_init, buffer_median_init,
		nc_iir_init, buffer_delay_init, init_display_buffer,
		init_display_buffer_point. This will not effect any existing
		working applicaitons when recompiled with the new version.

Optimisation Changes :
	buffer_differentiate


VERSION : 2.50
RELEASE DATE : 20-10-98
________________________

Additional Processor Support :
	TMS320C67X now fully supported

Additional Functionality :
	buffer_detrend and buffer_extract_trend functions added
	modify_iir_filter_gain function added for bilinear transform
	sig_gen_impulse macro added.

Bug Fixes :

Operational Changes :
	Offset parameter added as new 4th parameter to sig_gen_ramp macro.
	bilinear_transform and iir_zplane_to_coeffs - more flexibility added wrt numbers of poles and zeros
	signal_generate & window_init - Error flags modified to meet SigLib standards
	SIGLIB_PARAMETER_ERROR error message added

Optimisation Changes :


VERSION : 2.10
RELEASE DATE : 24-05-98
________________________

Additional Processor Support :
	TMS320C67X

Additional Functionality :
	histogram_equalize added
	HP VEE support added
	Definition SFLOAT_VERY_SMALL added.
	buffer_sign function added	buffer_copy_with_stride function added
	buffer_swap function added
	buffer_real_dot_product and buffer_complex_dot_product functions added.
	matrix_create_identity, matrix_inverse, matrix_lu_decompose, matrix_lu_solve,
	matrix_determinant and matrix_lu_determinant functions added.
	vector_add_scalar, vector_subtract_scalar, vector_multiply_scalar,
	vector_divide_scalar and scalar_subtract_vector functions added.
	bilinear_transform, iir_zplane_to_coeffs and filter frequency
		translation functions added.
	buffer_add_3, buffer_add_4, buffer_add_5 functions added.

Bug Fixes :
	buffer_clamp SIG_DOUBLE_SIDED_THOLD

Operational Changes :
	Definitiions _HOST_ENABLED changed to _SL_HOST_ENABLED and _HUGE_ARRAYS changed to _SL_HUGE_ARRAYS to avoid potential conflicts with user's applications.
	_IMAGING_ENABLED definition removed.
	Function declaration statement _SL_FUNC_DECL added to allow the same source code to be used for static and dynamic linkable libraries (DLLs).
	fir_buffer_apply modified to avoid compilation warnings with some compilers.
	Memory reallocation changed to only reallocate when array size changed.
	init_display_buffer_point, and init_display_buffer now return error code when memory allocation fails.
	buffer_clip moved to dsputil2.c.
	buffer_quantise changed to buffer_quantize.
	Compilation and librarian batch file names have changed.

Optimisation Changes :
	buffer_lengthen improved.


VERSION : 2.01
RELEASE DATE : 30-08-97
________________________

Additional Processor Support :
	None

Additional Functionality :
	Delta modulation
	sample_count_one_bits function added
	buffer_float_to_fix and buffer_fix_to_float functions added.

Additional Examples :
	See Additional Functionality
	Histogram equalisation added to imaging example

Bug Fixes :
	read_buffer - return from function misplaced
	Registration document missing
	dat_buffer_to_disk and dat_buffer_from_disk incorrectly documented

Operational Changes :
	printat macro changed to a function
	Some header files (compiler specific graphics and I/O files) have been
		removed from siglib.h for compatibility, these now need to be
		included in the application source files.
	The following functions now conform to the SigLib standard convention of
		having separate input and output array pointers : buffer_clip, buffer_scale,
		buffer_divide, buffer_multiply and buffer_offset.
	The following functions were changed to avoid the side effects of using
		the fabs macro in certain compilers : find_abs_max, find_abs_min,
		find_abs_max_pos, find_abs_min_pos, buffer_abs, buffer_histogram.
	The following functions now return the error code SIGLIB_MEM_ALLOC_ERROR
		when there has been a memory allocation error : czt_init, fft2d_init,
		pwm_init, fft_init, arb_fft_init, buffer_median_init, complex_shift_init,
		nc_iir_init and buffer_delay_init


VERSION : 2.00
RELEASE DATE : 01-05-97
________________________

Additional Processor Support :
	TMS320C6X, TMS320C80-MP, Alpha, PowerPC.

Additional Functionality :
	.WAV file I/O
	Arbitrary length FFT functions, czt_init() & phase_unwrap()
	siglib_version()
	buffer_mean_square_error ()
	Frequency domain sinx/x interpolation (fd_interpolate2 ())
	sample_min (), sample_max (), sample_abs_min () and sample_abs_max ()
	FFT D.C. shifting functions added (fft_shift and cfft_shift)
	Additional vector manipulation functions
	resonator functions
	Non-causal (linear phase) IIR filters
	Sobel_vertical3x3 () and sobel_horizontal3x3 () filters
	Covariance ()
	buffer_sort and buffer_median ()
	Frequency domain Hilbert transform
	Instantaneous frequency analyser functions
	Image coding functions :
		display_icoder, init_display_icoder, clear_display_icoder,
		dct8x8_init, dct8x8, idct8x8, zig_zag_scan, zig_zag_descan.
	BUFFER_OPERATE virtual function
	Matrix manipulation :
		matrix_multiply, matrix_transpose, print_matrix,
		matrix_copy, matrix_add, matrix_subtract,
		matrix_multiply_piecewise, matrix_scalar_multiply.

Additional Example programs :
	Analytic signal generation
	Matched filters
	Cepstrum analysis

Bug Fixes :
	convolve_linear ()
	sl_clear_cross_hairs ()
	buffer_reverse ()
	buffer_lengthen ()

Operational Changes :
	Goertzel detect buffer length factor removed
	FFT.C changed to FOURIER.C, LMS.C changed to ADAPTIVE.C.
	Changed int data types to 32 bits (SHEX -> SFIX)
	DFilter sample rate options extended
	DLL library support added
	bufffer_reverse modified to work in-place
	Image file format changed - now 8 bits per pixel


VERSION : 1.71
RELEASE DATE : 02-09-94
________________________

Additional DSP Support :

Additional Functionality :
	convolve_partial and convolve_circular
	correlate_linear function added.
	buffer_log_magnitude
	2D median3x3 filter
	buffer_zero_crossing_detect
	complex_window_apply
	Buffer_complex_multiply_2
	Chirp z-Transform functionality
	Complex numbers added (complex.c)
	hex file I/O and hex<>float functions
	window_inverse_coherent_gain()
	Channel multiplex functions
	Pulse width modulation

Additional Example programs :
	QPSK

Bug Fixes :
	fft_init () - memory reallocation.

Operational Changes :
	Word for Windows documentation added.
	convolve function changed to convolve_linear.
	correlate function changed to correlate_circular.
	sobel function changed to sobel3x3.


		1.70A
10-04-94		V1.70A released
	ref.txt bug fixes : buffer_subtract_2 and
	buffer_threshold descriptions changed.
	buffer_subtract_2 bug fix.

		1.70
01-04-94		V1.70 released.
	goertzel_filter and goertzel_detect functions added.
	group_delay function added.
	sign and modulus macros added.
	Power spectral density example added.
	sig_gen_ramp function added. xy_plot y axis +/- bug fixed.
	Integrate and differentiate and one pole
	filter functions now re-entrant,
	frequency_demodulate modified to reflect this.
	hilbert_transformer_init function added.
	Hilbert transform envelope detector example added.
	Trigonometric functions added.
	buffer_divide_2 added.
	Two real FFTs with one complex.
	Chirp fns modified to work across buffers.
	Gaussian noise generator added.
	buffer_mean_square, buffer_root_mean_square added.
	AGC control functions added.
	Sobel edge detection filter added.
	fft_init now generates a 3/4 sine wave table..
	21060 (SHARC) compatibility added.
	Signal thresholding added.
	Imaging graphics made compatible with Turbo C.
	dspgraph.c made totally compatible with Turbo
	C and the number of text lines on a screen is now limited to 30.
	find_middle function added.

		1.61
03-01-94		V1.61 Released.
	Modulo functions added.
	Microscan spectrum analyzer added.
	signal_generate() changed, to allow chirp end. buffer_delay() added.
	16-QAM demonstration added. Frequency modulation added.
	Plotting functions made rescalable.
	Regression analysis added.
	PN sequence generation added. X-Y scatter plot function added.
	sample_round() and buffer_round() added.
	sample and buffer polynomial expansion added.
	signal_generate changed - save current value parameter added.
	buffer_power() and Kurtosis analysis added.
	get_phase() added.
	buffer_negate() added. DFilter upgraded and pole zero plot added.
	cfft() and cifft() changed, to have the same
	phase response as rfft(). This does not affect any results that					perform a square magn. sum on the results.
	Graphics use MSVC's _setvieworg, not _setlogorg, they have identical
		params. pole zero plots added. Time domain pitch shift added.
	Echo / reverb added. signal generate IMPULSE_STREAM added.
	signal generate SQUARE_WAVE inter-buffer phase bug removed.
	Frequency domain interpolation added.
	Buffer_histogram improved.
	Linear chirp added, chirps use sin, not cos. buffer_reverse() added.
	buffer_add_x functions rationalised. buffer_subtract_2() added.
	2D FFT added.
	buffer_scale now returns the scalar value.
	Spectral inversion added.
	Fixed initialisation bug in buffer_scale ().

		1.60
24-10-93		V1.60 released.
	display_buffer_line modified, PID controller added.
	Support for DSP96002 and 21020 added.
	One pole filters added.
	typedef SFLOAT added for portability
	Kaiser and Blackman-Harris windows added
	Differentiate and integrate added Peak hold functions added
	FIR filter changed, explicit test found to be quicker than modulo function.
	Statistics functions added.
	Added find_FEATURE_position functions Buffer absolute added
	Siggen - randomise seed now uses milliseconds.
	Modified display_buffer_line() to handle extended buffer sizes
	DFilter (Tm) added (Filter design program)
	Additional comb filters added fromdisk() and todisk() changed

		1.52
25-06-93		V1.52 released.
	fir_add_sample() offset bug fixed
	Histogram function written.
	DSPGRAPH pointer bug fixed.
	SigLib for Microsoft C now uses medium model.
	Cross hair added, to show buffer values on graphs.
	init_display_3d_buffer requires buffer size param.
	buffer_clip changed.
	Zoom FFT added.

                1.51
17-02-93		V1.51 released.
	Added Windows graphical front end
	Added functionality for multi rate filtering.
	PC version recompiled for Microsoft C 7.00
	Modified for VGA mode graphics
	3d graphs added.
	Added file output function.

                1.50
28-10-92		V1.50 released (First public Release).
	clear_graph and disp_buf_line added. FFT, now
	has correct twiddle factors. Added 10log10
	and 20log10 functions.


27-10-92
	DSPUTILS, added to_rect(), to_polar(),
	find_abs_max, find_abs_min, also display_buffers
	scales max to fsd. FFT functions updated.
	siggen() sin and cosine functions now use phase in radians.

26-10-92
	DSPUTILS, moded, for better buffer_scale()

25-10-92
	Evaluation copy first released.
	First C30 compilation.

01-09-92
	Started to integrate functions into library


DFPlus, Digital Filter Plus and SigLib are trademarks of Sigma Numerix Ltd.
Copyright (C) 1992 to 2018 Sigma Numerix Ltd.
